var sprc = atob('Ly9TdGFydCBPZiBMb2FkaW5nIFNjcmVlbl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCi8vIERlZmluZSB0aGUgVVJMIG9mIHRoZSByYXcgR2l0SHViIGZpbGUgdGhhdCBjb250YWlucyB0aGUgSFRNTCBjb2RlIHlvdSB3YW50IHRvIGltcG9ydApjb25zdCBodG1sRmlsZVVybCA9ICdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vQkNNUzcvQkNNLS9tYWluL2xvYWRpbmc0JzsKCi8vIEZldGNoIHRoZSBIVE1MIGNvZGUgZnJvbSB0aGUgcmF3IEdpdEh1YiBmaWxlIHVzaW5nIHRoZSBGZXRjaCBBUEkKZmV0Y2goaHRtbEZpbGVVcmwpCiAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UudGV4dCgpKQogIC50aGVuKGh0bWwgPT4gewogICAgLy8gQ3JlYXRlIGEgbmV3IGlmcmFtZSBlbGVtZW50CiAgICBjb25zdCBpZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTsKICAgIGlmcmFtZS5zdHlsZS5wb3NpdGlvbiA9ICdmaXhlZCc7CiAgICBpZnJhbWUuc3R5bGUudG9wID0gJzAnOwogICAgaWZyYW1lLnN0eWxlLmxlZnQgPSAnMCc7CiAgICBpZnJhbWUuc3R5bGUud2lkdGggPSAnMTM4JSc7CiAgICBpZnJhbWUuc3R5bGUuaGVpZ2h0ID0gJzEyNSUnOwogICAgaWZyYW1lLnN0eWxlLm1hcmdpbkxlZnQgPSAnLTE5JSc7IC8vIEFkZCBsZWZ0IG1hcmdpbiB0byB0aGUgaWZyYW1lCiAgICBpZnJhbWUuc3R5bGUubWFyZ2luVG9wID0gJy0yJSc7IC8vIEFkZCBsZWZ0IG1hcmdpbiB0byB0aGUgaWZyYW1lCgoKCiAgICAvLyBMb2FkIHRoZSBpbXBvcnRlZCBIVE1MIGludG8gdGhlIGlmcmFtZQogICAgaWZyYW1lLm9ubG9hZCA9IGZ1bmN0aW9uKCkgewogICAgICBjb25zdCBpZnJhbWVEb2N1bWVudCA9IHRoaXMuY29udGVudFdpbmRvdy5kb2N1bWVudDsKICAgICAgaWZyYW1lRG9jdW1lbnQub3BlbigpOwogICAgICBpZnJhbWVEb2N1bWVudC53cml0ZShodG1sKTsKICAgICAgaWZyYW1lRG9jdW1lbnQuY2xvc2UoKTsKICAgIH07CgogICAgLy8gQXBwZW5kIHRoZSBpZnJhbWUgdG8gdGhlIGN1cnJlbnQgcGFnZSdzIDxib2R5PiBlbGVtZW50CiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGlmcmFtZSk7CiAgICAvLyBSZW1vdmUgdGhlIGlmcmFtZSBhZnRlciA3IHNlY29uZHMKc2V0VGltZW91dCgoKSA9PiB7CiAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChpZnJhbWUpOwp9LCA3MDAwKTsKICB9KQogIC5jYXRjaChlcnJvciA9PiB7CiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbXBvcnRpbmcgSFRNTDonLCBlcnJvcik7CiAgfSk7CgoKLy9FbmQgT2YgTG9hZGluZyBTY3JlZW4gX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KCiAgCmZldGNoKCdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vQkNNUzcvQkNNL21haW4vc2VydmVybWFpbnRhaW5hbmNlJykKICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS50ZXh0KCkpCiAgLnRoZW4oZGF0YSA9PiB7CiAgICBjb25zdCByZWdleCA9IC9cZCsvOwogICAgY29uc3QgbWF0Y2ggPSBkYXRhLm1hdGNoKHJlZ2V4KTsKICAgIGlmIChtYXRjaCAmJiBwYXJzZUludChtYXRjaFswXSkgPj0gMSkgewogICAgICBmdW5jdGlvbiBzaG93VG9hc3RNYWludCgpIHsKICAgICAgICAvLyBDcmVhdGUgdGhlIHRvYXN0IGNvbnRhaW5lcgogICAgICAgIHZhciB0b2FzdENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLnBvc2l0aW9uID0gImZpeGVkIjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5ib3R0b20gPSAiNXB4IjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5yaWdodCA9ICI1cHgiOwogICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICJ3aGl0ZSI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuY29sb3IgPSAiIzE0MTQxNCI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUucGFkZGluZyA9ICI1cHgiOwogICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmJvcmRlciA9ICIycHggc29saWQgI2YyMmMyYyI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuYm9yZGVyUmFkaXVzID0gIjVweCI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuYm94U2hhZG93ID0gIjJweCAycHggMTBweCByZ2JhKDAsIDAsIDAsIDAuNSkiOwogICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuekluZGV4ID0gIjk5OSI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUudHJhbnNpdGlvbiA9ICJvcGFjaXR5IDAuNXMgZWFzZS1pbi1vdXQiOwogICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLm9wYWNpdHkgPSAiMCI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJmbGV4IjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5hbGlnbkl0ZW1zID0gImNlbnRlciI7CiAgICAgICAgdmFyIHN0YXR1c0JhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgc3RhdHVzQmFyLnN0eWxlLndpZHRoID0gIjEwMCUiOwogICAgc3RhdHVzQmFyLnN0eWxlLmhlaWdodCA9ICIzcHgiOwogICAgc3RhdHVzQmFyLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICJibGFjayI7CiAgICBzdGF0dXNCYXIuc3R5bGUucG9zaXRpb24gPSAiYWJzb2x1dGUiOwogICAgc3RhdHVzQmFyLnN0eWxlLmJvdHRvbSA9ICIwIjsKICAgIHN0YXR1c0Jhci5zdHlsZS5sZWZ0ID0gIjAiOwogICAgc3RhdHVzQmFyLnN0eWxlLnRyYW5zaXRpb24gPSAid2lkdGggNXMgZWFzZS1pbi1vdXQiOwogICAgc3RhdHVzQmFyLnN0eWxlLndpZHRoID0gIjAlIjsKICAgIHRvYXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKHN0YXR1c0Jhcik7CiAgICAKICAgIC8vIFVwZGF0ZSB0aGUgd2lkdGggb2YgdGhlIHN0YXR1cyBiYXIgYXMgaXQgY291bnRzIGRvd24KICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgIHN0YXR1c0Jhci5zdHlsZS53aWR0aCA9ICIxMDAlIjsKICAgIH0sIDApOwogICAgICAgIAogICAgLy8gQWRkIHRoZSBjdXN0b20gaW1hZ2UgaWNvbgogICAgdmFyIGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKTsKICAgIGljb24uc3JjID0gImh0dHBzOi8vbWVkaWEuZGlzY29yZGFwcC5uZXQvYXR0YWNobWVudHMvNzgxNzQ5MjI5MzMxOTM5MzI4LzEwNzk2NTkwMTY5MTkxOTU3NDgvYjY2NDE5MTE3ODk3YTk4OC5wbmc/d2lkdGg9MTE5MCZoZWlnaHQ9MTE4OSI7CiAgICBpY29uLnN0eWxlLndpZHRoID0gIjIzcHgiOwogICAgaWNvbi5zdHlsZS5oZWlnaHQgPSAiMjNweCI7CiAgICBpY29uLnN0eWxlLmJvcmRlclJhZGl1cyA9ICI1MCUiOwogICAgaWNvbi5zdHlsZS5tYXJnaW5SaWdodCA9ICItMzBweCI7CiAgICBpY29uLnN0eWxlLm1hcmdpbkJvdHRvbSA9ICItNXB4IjsKICAgIHRvYXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKGljb24pOwogICAgCiAgICAvLyBBZGQgdGhlIHRleHQgbWVzc2FnZQogICAgdmFyIHRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzcGFuIik7CiAgICB0ZXh0LnN0eWxlLmZvbnRXZWlnaHQgPSAiYm9sZCI7CiAgICB0ZXh0LnN0eWxlLm1hcmdpbkxlZnQgPSAiMzVweCI7CiAgICB0ZXh0LmlubmVySFRNTCA9ICJCQ01FIHNlcnZlcnMgYXJlIHVuZGVyIG1haW50YWluYW5jZSwgdHJ5IGFnYWluIGxhdGVyIjsKICAgIHRvYXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKHRleHQpOwogICAgCiAgICAgICAgCiAgICAgIAogICAgICAgIC8vIEFwcGVuZCB0aGUgdG9hc3QgY29udGFpbmVyIHRvIHRoZSBib2R5CiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0b2FzdENvbnRhaW5lcik7CiAgICAgIAogICAgICAgIC8vIFNob3cgdGhlIHRvYXN0IHdpdGggYSBmYWRlIGluIGFuaW1hdGlvbgogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsKICAgICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLm9wYWNpdHkgPSAiMSI7CiAgICAgICAgfSwgMCk7CiAgICAgIAogICAgICAgIC8vIEhpZGUgdGhlIHRvYXN0IHdpdGggYSBmYWRlIG91dCBhbmltYXRpb24KICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICIwIjsKICAgICAgICB9LCA1MDAwMDAwKTsKICAgICAgCiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICAgICAgfSwgNTUwMDAwMCk7CiAgICAgIH0gCiAgICAgIHNob3dUb2FzdE1haW50KCk7ICAgICAKICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeGVjdXRpb24gc3RvcHBlZC4nKTsgLy8gc3RvcCBleGVjdXRpbmcgdGhlIHJlc3Qgb2YgdGhlIGNvZGUKICAgIH0gZWxzZSB7CgoKLy9TdGFydCBPZiBDb250ZXh0IE1lbnVfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwoKdmFyIHZpc2IgPSB0cnVlOwovL2NvbnRleHQgTWVudQp2YXIgY29udGV4dE1lbnVPcGVuID0gZmFsc2U7Ci8vIEZ1bmN0aW9uIHRvIGNyZWF0ZSBjdXN0b20gY29udGV4dCBtZW51IGJ1dHRvbnMKZnVuY3Rpb24gY3JlYXRlQnV0dG9uKHRleHQsIG9uQ2xpY2spIHsKICAgICBjb250ZXh0TWVudU9wZW4gPSB0cnVlOwogICAgdmFyIGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgYnV0dG9uLmlubmVySFRNTCA9IHRleHQ7CiAgICBidXR0b24ub25jbGljayA9IG9uQ2xpY2s7CiAgICBidXR0b24uc3R5bGUud2lkdGggPSAiMTAwJSI7CiAgICBidXR0b24uc3R5bGUudGV4dEFsaWduID0gImxlZnQiOwogICAgYnV0dG9uLnN0eWxlLnBhZGRpbmcgPSAiNXB4IjsKICAgIGJ1dHRvbi5zdHlsZS5jdXJzb3IgPSAicG9pbnRlciI7CiAgICByZXR1cm4gYnV0dG9uOwp9CgovLyBGdW5jdGlvbiB0byBjcmVhdGUgYSBzZXBhcmF0b3IKZnVuY3Rpb24gY3JlYXRlU2VwYXJhdG9yKCkgewogICAgdmFyIHNlcGFyYXRvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImhyIik7CiAgICBzZXBhcmF0b3Iuc3R5bGUubWFyZ2luID0gIjVweCAwIjsKICAgIHJldHVybiBzZXBhcmF0b3I7Cn0KCi8vIEZ1bmN0aW9uIHRvIGRpc3BsYXkgY3VzdG9tIGNvbnRleHQgbWVudQpkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJjb250ZXh0bWVudSIsIGZ1bmN0aW9uKGV2ZW50KSB7CiAgICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogICAgdmFyIGNvbnRleHRNZW51ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICBjb250ZXh0TWVudS5zdHlsZS5wb3NpdGlvbiA9ICJmaXhlZCI7CiAgICBjb250ZXh0TWVudS5zdHlsZS50b3AgPSBldmVudC5jbGllbnRZICsgInB4IjsKICAgIGNvbnRleHRNZW51LnN0eWxlLmxlZnQgPSBldmVudC5jbGllbnRYICsgInB4IjsKICAgIGNvbnRleHRNZW51LnN0eWxlLmJhY2tncm91bmQgPSAibGluZWFyLWdyYWRpZW50KHRvIGJvdHRvbSwgd2hpdGUsIHdoaXRlKSI7CiAgICBjb250ZXh0TWVudS5zdHlsZS5ib3hTaGFkb3cgPSAiMCAwIDNweCAjOTk5IjsKICAgIGNvbnRleHRNZW51LnN0eWxlLmJvcmRlclJhZGl1cyA9ICI4cHgiOwogICAgY29udGV4dE1lbnUuc3R5bGUuekluZGV4ID0gIjk5OTkiOwogICAgY29udGV4dE1lbnUuc3R5bGUuYm9yZGVyID0gIjJweCBzb2xpZCBibGFjayI7CiAgICBjb250ZXh0TWVudU9wZW4gPSB0cnVlOwogICAgZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCBmdW5jdGlvbigpIHsKICAgICAgICBjb250ZXh0TWVudS5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgfSk7CiAgICAKCgogICAgLy8gQ3JlYXRlIGhlYWRlciB3aXRoIHByb2ZpbGUgcGhvdG8KICAgIHZhciBoZWFkZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgIGhlYWRlci5zdHlsZS5kaXNwbGF5ID0gImZsZXgiOwogICAgaGVhZGVyLnN0eWxlLmFsaWduSXRlbXMgPSAiY2VudGVyIjsKICAgIGhlYWRlci5zdHlsZS5wYWRkaW5nID0gIjVweCI7CgogICAgdmFyIHByb2ZpbGVQaG90byA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImltZyIpOwogICAgcHJvZmlsZVBob3RvLnNyYyA9ICJodHRwczovL21lZGlhLmRpc2NvcmRhcHAubmV0L2F0dGFjaG1lbnRzLzc4MTc0OTIyOTMzMTkzOTMyOC8xMDc5NjU5MDE2OTE5MTk1NzQ4L2I2NjQxOTExNzg5N2E5ODgucG5nP3dpZHRoPTExOTAmaGVpZ2h0PTExODkiOwogICAgcHJvZmlsZVBob3RvLnN0eWxlLndpZHRoID0gIjMwcHgiOwogICAgcHJvZmlsZVBob3RvLnN0eWxlLmhlaWdodCA9ICIzMHB4IjsKICAgIHByb2ZpbGVQaG90by5zdHlsZS5ib3JkZXJSYWRpdXMgPSAiMjAlIjsKICAgIHByb2ZpbGVQaG90by5zdHlsZS5tYXJnaW5SaWdodCA9ICIxMHB4IjsKCiAgICB2YXIgaGVhZGVyVGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgaGVhZGVyVGV4dC5pbm5lckhUTUwgPSAiPGI+RXNzZW50aWFsczwvYj4iOwoKICAgIGhlYWRlci5hcHBlbmRDaGlsZChwcm9maWxlUGhvdG8pOwogICAgaGVhZGVyLmFwcGVuZENoaWxkKGhlYWRlclRleHQpOwoKIC8vIENyZWF0ZSBjdXN0b20gYnV0dG9ucwogdmFyIGJ1dHRvbjEgPSBjcmVhdGVCdXR0b24oIlJlc3RvcmUgQ2hhcmFjdGVyIiwgZnVuY3Rpb24oKSB7CiAgICBqYXZhc2NyaXB0OlBsYXllci5BcHBlYXJhbmNlID0gQ2hhdFNlYXJjaFNhZmV3b3JkQXBwZWFyYW5jZS5zbGljZSgwKTsgIENoYXJhY3RlclJlZnJlc2goUGxheWVyKTsgIENoYXRSb29tQ2hhcmFjdGVyVXBkYXRlKFBsYXllcik7CiAgICBzaG93VG9hc3RzY3BnKCk7Cn0pOwp2YXIgYnV0dG9uMiA9IGNyZWF0ZUJ1dHRvbigiRm9yY2UgUm9vbSBTd2FwIiwgZnVuY3Rpb24oKSB7CiAgICBqYXZhc2NyaXB0OkNoYXRTZWxlY3RTdGFydFNlYXJjaCgnWCcpLENoYXRSb29tU2V0TGFzdENoYXRSb29tKCcnKSxkb2N1bWVudFsnZ2V0RWxlbWVudEJ5SWQnXSgnSW5wdXRDaGF0JylbJ3N0eWxlJ11bJ2Rpc3BsYXknXT0nbm9uZScsZG9jdW1lbnRbJ2dldEVsZW1lbnRCeUlkJ10oJ1RleHRBcmVhQ2hhdExvZycpWydzdHlsZSddWydkaXNwbGF5J109J25vbmUnLENoYXRTZWxlY3RTdGFydFNlYXJjaCgnWCcpLENoYXRSb29tU2V0TGFzdENoYXRSb29tKCcnKTsKICAgIHNob3dUb2FzdHNjcGcoKTsKfSk7CnZhciBidXR0b24zID0gY3JlYXRlQnV0dG9uKCJGcmVlIFRhcmdldCIsIGZ1bmN0aW9uKCkgewogICAgamF2YXNjcmlwdDpDaGFyYWN0ZXJSZWxlYXNlVG90YWwoQ3VycmVudENoYXJhY3RlciksQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoQ3VycmVudENoYXJhY3Rlcik7CiAgICBzaG93VG9hc3RzY3BnKCk7Cn0pOwp2YXIgYnV0dG9uNCA9IGNyZWF0ZUJ1dHRvbigiUmVtb3ZlIFJlc3RyYWludCIsIGZ1bmN0aW9uKCkgewogICAgamF2YXNjcmlwdDpJbnZlbnRvcnlVbmxvY2soQ3VycmVudENoYXJhY3RlciwgQ3VycmVudENoYXJhY3Rlci5Gb2N1c0dyb3VwLk5hbWUpOwogICAgSW52ZW50b3J5UmVtb3ZlKEN1cnJlbnRDaGFyYWN0ZXIsIEN1cnJlbnRDaGFyYWN0ZXIuRm9jdXNHcm91cC5OYW1lKTsKICAgIENoYXRSb29tQ2hhcmFjdGVySXRlbVVwZGF0ZShDdXJyZW50Q2hhcmFjdGVyLCBDdXJyZW50Q2hhcmFjdGVyLkZvY3VzR3JvdXAuTmFtZSk7CiAgICBzaG93VG9hc3RzY3BnKCk7Cn0pOwp2YXIgYnV0dG9uNSA9IGNyZWF0ZUJ1dHRvbigiVGFyZ2V0IFN0cnVnZ2xlIERpZmZpY3VsdHkiLCBmdW5jdGlvbigpIHsKICAgIGphdmFzY3JpcHQ6ZG97dmFyIGRpZmM9cHJvbXB0KCdEaWZmaWN1bHR5XHgyMDEtOTYnKTt9d2hpbGUoIShkaWZjPj0weDEmJmRpZmM8PTB4NjApKTsKICAgIEludmVudG9yeVNldERpZmZpY3VsdHkoQ3VycmVudENoYXJhY3RlciwgIkl0ZW1IZWFkIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtTW91dGgiLCBkaWZjKTsKICAgIEludmVudG9yeVNldERpZmZpY3VsdHkoQ3VycmVudENoYXJhY3RlciwgIkl0ZW1Nb3V0aDIiLCBkaWZjKTsKICAgIEludmVudG9yeVNldERpZmZpY3VsdHkoQ3VycmVudENoYXJhY3RlciwgIkl0ZW1Nb3V0aDMiLCBkaWZjKTsKICAgIEludmVudG9yeVNldERpZmZpY3VsdHkoQ3VycmVudENoYXJhY3RlciwgIkl0ZW1Bcm1zIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtSGFuZHMiLCBkaWZjKTsKICAgIEludmVudG9yeVNldERpZmZpY3VsdHkoQ3VycmVudENoYXJhY3RlciwgIkl0ZW1MZWdzIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtRXllcyIsIGRpZmMpOwogICAgSW52ZW50b3J5U2V0RGlmZmljdWx0eShDdXJyZW50Q2hhcmFjdGVyLCAiSXRlbUZlZXQiLCBkaWZjKTsKICAgIEludmVudG9yeVNldERpZmZpY3VsdHkoQ3VycmVudENoYXJhY3RlciwgIkl0ZW1EZXZpY2VzIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtQWRkb24iLCBkaWZjKTsKICAgIEludmVudG9yeVNldERpZmZpY3VsdHkoQ3VycmVudENoYXJhY3RlciwgIkl0ZW1OZWNrIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtTmVja1Jlc3RyYWludHMiLCBkaWZjKTsKICAgIEludmVudG9yeVNldERpZmZpY3VsdHkoQ3VycmVudENoYXJhY3RlciwgIkl0ZW1OZWNrQWNjZXNzb3JpZXMiLCBkaWZjKTsKICAgIEludmVudG9yeVNldERpZmZpY3VsdHkoQ3VycmVudENoYXJhY3RlciwgIkl0ZW1Cb290cyIsIGRpZmMpOwogICAgSW52ZW50b3J5U2V0RGlmZmljdWx0eShDdXJyZW50Q2hhcmFjdGVyLCAiSXRlbUhvb2QiLCBkaWZjKTsKICAgIEludmVudG9yeVNldERpZmZpY3VsdHkoQ3VycmVudENoYXJhY3RlciwgIkl0ZW1Ob3NlIiwgZGlmYyk7CiAgICBDaGF0Um9vbUNoYXJhY3RlclVwZGF0ZShDdXJyZW50Q2hhcmFjdGVyKTsKICAgIHNob3dUb2FzdHNjcGcoKTsKfSk7CnZhciBidXR0b242ID0gY3JlYXRlQnV0dG9uKCJPcGVuIFRhcmdldCBXYXJkcm9iZSIsIGZ1bmN0aW9uKCkgewogICAgamF2YXNjcmlwdDpEaWFsb2dDaGFuZ2VDbG90aGVzKCk7CiAgICBzaG93VG9hc3RzY3BnKCk7Cn0pOwp2YXIgYnV0dG9uNyA9IGNyZWF0ZUJ1dHRvbigiQ29tcGxldGUgU3RydWdnbGUgTWluaWdhbWUiLCBmdW5jdGlvbigpIHsKICAgIGNvbnRleHRNZW51T3BlbiA9IGZhbHNlOwogICAgamF2YXNjcmlwdDpTdHJ1Z2dsZVByb2dyZXNzID0xMDAwOwogICAgY29udGV4dE1lbnUuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgQ2hhdFJvb21DbGlja0NoYXJhY3RlcihQbGF5ZXIpOwogICAgICAgIERpYWxvZ0xlYXZlKCk7CiAgICB9LCA1MDApOwogICAgc2hvd1RvYXN0c2NwZygpOwp9KTsKCnZhciBidXR0b244ID0gY3JlYXRlQnV0dG9uKCJJbnZpc2libGUiLCBmdW5jdGlvbigpIHsKICAgIGphdmFzY3JpcHQ6SW52ZW50b3J5R2V0KFBsYXllciwgIkVtb3RpY29uIikuUHJvcGVydHkuT3ZlcnJpZGVIZWlnaHQgPSB7CiAgICAgIEhlaWdodDogIi0iCiAgICAgIH07CiAgICAgIEN1cnJlbnRTY3JlZW4gPT09ICJDaGF0Um9vbSIgPwogICAgICBDaGF0Um9vbUNoYXJhY3RlclVwZGF0ZShQbGF5ZXIpIDoKICAgICAgQ2hhcmFjdGVyUmVmcmVzaChQbGF5ZXIpOwogICAgICBDaGF0Um9vbUNoYXJhY3RlclVwZGF0ZShQbGF5ZXIpOyAKICAgICAgdmlzYiA9IGZhbHNlOwogICAgICBzaG93VG9hc3RzY3BnKCk7CiAgICAgIHVwZGF0ZUNvbnRleHRNZW51KCk7IC8vIGNhbGwgdXBkYXRlQ29udGV4dE1lbnUgdG8gdXBkYXRlIHRoZSBjb250ZXh0IG1lbnUKCiAgICAKfSk7Cgp2YXIgYnV0dG9uOSA9IGNyZWF0ZUJ1dHRvbigiVmlzaWJsZSIsIGZ1bmN0aW9uKCkgewogIGphdmFzY3JpcHQ6Q2hhcmFjdGVyU2V0QWN0aXZlUG9zZShQbGF5ZXIsIG51bGwpOwogIGRlbGV0ZSBJbnZlbnRvcnlHZXQoUGxheWVyLCAnRW1vdGljb24nKS5Qcm9wZXJ0eS5PdmVycmlkZUhlaWdodDsKICBDdXJyZW50U2NyZWVuID09PSAnQ2hhdFJvb20nID8KICBDaGF0Um9vbUNoYXJhY3RlclVwZGF0ZShQbGF5ZXIpIDoKICBDaGFyYWN0ZXJSZWZyZXNoKFBsYXllcik7CiAgICAgIHZpc2IgPSB0cnVlOwogICAgc2hvd1RvYXN0c2NwZygpOwogICAgdXBkYXRlQ29udGV4dE1lbnUoKTsgLy8gY2FsbCB1cGRhdGVDb250ZXh0TWVudSB0byB1cGRhdGUgdGhlIGNvbnRleHQgbWVudQoKICAKfSk7Cgp2YXIgYnV0dG9uMTAgPSBjcmVhdGVCdXR0b24oIkN1c3RvbSBTY3JpcHQiLCBmdW5jdGlvbigpIHsKICBqYXZhc2NyaXB0OnZhciBzY3JwID0gcHJvbXB0KCJQYXN0ZSB5b3VyIHNjcmlwdCBoZXJlOiIpOwogIGlmIChzY3JwKSB7CiAgICBldmFsKHNjcnApOwogICAgc2hvd1RvYXN0c2NwZygpOwogIH0KfSk7Ci8vIFRyYW5zaXRpb24gc3R5bGVzIGZvciB0aGUgYnV0dG9ucwpidXR0b24xLnN0eWxlLnRyYW5zaXRpb24gPSAiYmFja2dyb3VuZC1jb2xvciAwLjJzIGVhc2UtaW4tb3V0IjsKYnV0dG9uMi5zdHlsZS50cmFuc2l0aW9uID0gImJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLWluLW91dCI7CmJ1dHRvbjMuc3R5bGUudHJhbnNpdGlvbiA9ICJiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZS1pbi1vdXQiOwpidXR0b240LnN0eWxlLnRyYW5zaXRpb24gPSAiYmFja2dyb3VuZC1jb2xvciAwLjJzIGVhc2UtaW4tb3V0IjsKYnV0dG9uNS5zdHlsZS50cmFuc2l0aW9uID0gImJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLWluLW91dCI7CmJ1dHRvbjYuc3R5bGUudHJhbnNpdGlvbiA9ICJiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZS1pbi1vdXQiOwpidXR0b243LnN0eWxlLnRyYW5zaXRpb24gPSAiYmFja2dyb3VuZC1jb2xvciAwLjJzIGVhc2UtaW4tb3V0IjsKYnV0dG9uOC5zdHlsZS50cmFuc2l0aW9uID0gImJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLWluLW91dCI7CmJ1dHRvbjkuc3R5bGUudHJhbnNpdGlvbiA9ICJiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZS1pbi1vdXQiOwpidXR0b24xMC5zdHlsZS50cmFuc2l0aW9uID0gImJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLWluLW91dCI7CgoKCi8vSG92ZXIgZXZlbnRzIGZvciB0aGUgYnV0dG9ucwpidXR0b24xLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3ZlciIsIGZ1bmN0aW9uKCkgewogICAgdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI2RkZGRkZCI7CiAgICB0aGlzLnN0eWxlLndpZHRoID0gIjE5MHB4IjsKICAgIH0pOwpidXR0b24xLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3V0IiwgZnVuY3Rpb24oKSB7CiAgICB0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIiOwogICAgfSk7CgpidXR0b24yLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3ZlciIsIGZ1bmN0aW9uKCkgewp0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZGRkZGRkIjsKdGhpcy5zdHlsZS53aWR0aCA9ICIxOTBweCI7Cn0pOwpidXR0b24yLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3V0IiwgZnVuY3Rpb24oKSB7CnRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiI7Cn0pOwoKYnV0dG9uMy5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW92ZXIiLCBmdW5jdGlvbigpIHsKdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI2RkZGRkZCI7CnRoaXMuc3R5bGUud2lkdGggPSAiMTkwcHgiOwp9KTsKYnV0dG9uMy5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW91dCIsIGZ1bmN0aW9uKCkgewp0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIiOwp9KTsKCmJ1dHRvbjQuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdmVyIiwgZnVuY3Rpb24oKSB7CnRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNkZGRkZGQiOwp0aGlzLnN0eWxlLndpZHRoID0gIjE5MHB4IjsKfSk7CmJ1dHRvbjQuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdXQiLCBmdW5jdGlvbigpIHsKdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiIjsKfSk7CgpidXR0b241LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3ZlciIsIGZ1bmN0aW9uKCkgewp0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZGRkZGRkIjsKdGhpcy5zdHlsZS53aWR0aCA9ICIxOTBweCI7Cn0pOwpidXR0b241LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3V0IiwgZnVuY3Rpb24oKSB7CnRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiI7Cn0pOwoKYnV0dG9uNi5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW92ZXIiLCBmdW5jdGlvbigpIHsKdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI2RkZGRkZCI7CnRoaXMuc3R5bGUud2lkdGggPSAiMTkwcHgiOwp9KTsKYnV0dG9uNi5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW91dCIsIGZ1bmN0aW9uKCkgewp0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIiOwp9KTsKCmJ1dHRvbjcuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdmVyIiwgZnVuY3Rpb24oKSB7CnRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNkZGRkZGQiOwp0aGlzLnN0eWxlLndpZHRoID0gIjE5MC41cHgiOwp9KTsKYnV0dG9uNy5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW91dCIsIGZ1bmN0aW9uKCkgewp0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIiOwp9KTsKCmJ1dHRvbjguYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdmVyIiwgZnVuY3Rpb24oKSB7CnRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNkZGRkZGQiOwp0aGlzLnN0eWxlLndpZHRoID0gIjE5MHB4IjsKfSk7CmJ1dHRvbjguYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdXQiLCBmdW5jdGlvbigpIHsKdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiIjsKfSk7CgpidXR0b245LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3ZlciIsIGZ1bmN0aW9uKCkgewp0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZGRkZGRkIjsKdGhpcy5zdHlsZS53aWR0aCA9ICIxOTBweCI7Cn0pOwpidXR0b245LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3V0IiwgZnVuY3Rpb24oKSB7CnRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiI7Cn0pOwoKYnV0dG9uMTAuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdmVyIiwgZnVuY3Rpb24oKSB7CnRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNkZGRkZGQiOwp0aGlzLnN0eWxlLndpZHRoID0gIjE5MHB4IjsKfSk7CmJ1dHRvbjEwLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3V0IiwgZnVuY3Rpb24oKSB7CnRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiI7Cn0pOwoKLy9Ecm9wZG93biBNZW51CgpmdW5jdGlvbiBmb3JjZWNsb3NlbWVudSgpIHsKICAgICAgY29udGV4dE1lbnUuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgICAgQ2hhdFJvb21DbGlja0NoYXJhY3RlcihQbGF5ZXIpOwogICAgICBEaWFsb2dMZWF2ZSgpOwogIGNvbnRleHRNZW51T3BlbiA9IGZhbHNlOwogIH0KCiAvLyBDcmVhdGUgYSBkcm9wZG93biBtZW51CnZhciBzZWxlY3QgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzZWxlY3QiKTsKc2VsZWN0LnN0eWxlLmJvcmRlclJhZGl1cyA9ICIycHgiOwpzZWxlY3Quc3R5bGUucGFkZGluZyA9ICI0cHgiOwpzZWxlY3Quc3R5bGUud2lkdGggPSAiMjAwcHgiOwpzZWxlY3Quc3R5bGUubWFyZ2luVG9wID0gIi0yMHB4IjsKc2VsZWN0LnN0eWxlLm1hcmdpblJpZ2h0ID0gIjJweCI7CnNlbGVjdC5zdHlsZS5tYXJnaW5Cb3R0b20gPSAiM3B4IjsKc2VsZWN0LnN0eWxlLm1hcmdpbkxlZnQgPSAiMnB4IjsKdmFyIG9wdGlvbjEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKTsKb3B0aW9uMS52YWx1ZSA9ICJvcHQxIjsKb3B0aW9uMS50ZXh0ID0gIlBlcnNvbmFsaXNhdGlvbiBNZW51IjsKb3B0aW9uMS5zZWxlY3RlZCA9IHRydWU7Cm9wdGlvbjEuZGlzYWJsZWQgPSB0cnVlOwp2YXIgb3B0aW9uMiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpOwpvcHRpb24yLnZhbHVlID0gIm9wdDIiOwpvcHRpb24yLnRleHQgPSAiRWRpdCBDYXNoIjsKdmFyIG9wdGlvbjMgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKTsKb3B0aW9uMy52YWx1ZSA9ICJvcHQzIjsKb3B0aW9uMy50ZXh0ID0gIk1heCBTa2lsbHMiOwp2YXIgb3B0aW9uNCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpOwpvcHRpb240LnZhbHVlID0gIm9wdDQiOwpvcHRpb240LnRleHQgPSAiTWF4IFJlcHV0YXRpb24iOwp2YXIgb3B0aW9uNSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpOwpvcHRpb241LnZhbHVlID0gIm9wdDUiOwpvcHRpb241LnRleHQgPSAiUHVyY2hhc2UgRXZlcnl0aGluZyI7CnZhciBvcHRpb242ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0aW9uIik7Cm9wdGlvbjYudmFsdWUgPSAib3B0NiI7Cm9wdGlvbjYudGV4dCA9ICJSZWxlYXNlIE93bmVyIENvbGxhciI7CnZhciBvcHRpb243ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0aW9uIik7Cm9wdGlvbjcudmFsdWUgPSAib3B0NyI7Cm9wdGlvbjcudGV4dCA9ICIrMSBMQVJQIExldmVsIjsKdmFyIG9wdGlvbjggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKTsKb3B0aW9uOC52YWx1ZSA9ICJvcHQ4IjsKb3B0aW9uOC50ZXh0ID0gIkJlY29tZSBFc2NhcGVkIFBhdGllbnQiOwp2YXIgb3B0aW9uOSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpOwpvcHRpb245LnZhbHVlID0gIm9wdDkiOwpvcHRpb245LnRleHQgPSAiQmVjb21lIENsdWIgU2xhdmUiOwp2YXIgb3B0aW9uMTAgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKTsKb3B0aW9uMTAudmFsdWUgPSAib3B0MTAiOwpvcHRpb24xMC50ZXh0ID0gIlJlbGVhc2UgQ2x1YiBUaXRsZSI7CnZhciBvcHRpb24xMSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpOwpvcHRpb24xMS52YWx1ZSA9ICJvcHQxMSI7Cm9wdGlvbjExLnRleHQgPSAiU2V0IEdHVFMgTGV2ZWwiOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMSk7CnNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24yKTsKc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbjMpOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uNCk7CnNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb241KTsKc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbjYpOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uNyk7CnNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb244KTsKc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbjkpOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMTApOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMTEpOwoKCi8vIENyZWF0ZSBhIGJ1dHRvbiB0byBzaG93IHRoZSBkcm9wZG93biBtZW51CnZhciBkcm9wZG93bkJ1dHRvbiA9IGNyZWF0ZUJ1dHRvbigiUGVyc29uYWxpc2F0aW9uIiwgZnVuY3Rpb24oKSB7CiAgc2VsZWN0LnN0eWxlLmRpc3BsYXkgPSAiYmxvY2siOwp9KTsKLy8gQXBwbHkgQ1NTIHRvIG1ha2UgdGhlIGJ1dHRvbiBpbnZpc2libGUgYW5kIHRha2Ugbm8gc3BhY2UKZHJvcGRvd25CdXR0b24uc3R5bGUub3BhY2l0eSA9ICIwIjsKZHJvcGRvd25CdXR0b24uc3R5bGUucG9pbnRlckV2ZW50cyA9ICJub25lIjsKZHJvcGRvd25CdXR0b24uc3R5bGUucG9zaXRpb24gPSAiYWJzb2x1dGUiOwpkcm9wZG93bkJ1dHRvbi5zdHlsZS50b3AgPSAiLTk5OTlweCI7CmRyb3Bkb3duQnV0dG9uLnN0eWxlLmxlZnQgPSAiLTk5OTlweCI7CnNlbGVjdC5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIGZ1bmN0aW9uKGV2ZW50KSB7CiAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7IC8vIFN0b3AgdGhlIGV2ZW50IGZyb20gYnViYmxpbmcgdXAgdG8gdGhlIGNvbnRleHQgbWVudQp9KTsKCnNlbGVjdC5hZGRFdmVudExpc3RlbmVyKCJjaGFuZ2UiLCBmdW5jdGlvbigpIHsKICB2YXIgc2VsZWN0ZWRPcHRpb24gPSBzZWxlY3Qub3B0aW9uc1tzZWxlY3Quc2VsZWN0ZWRJbmRleF0udmFsdWU7CiAgaWYgKHNlbGVjdGVkT3B0aW9uID09PSAib3B0MSIpIHsKICAgIC8vIFBlcmZvcm0gYWN0aW9uIGZvciBPcHRpb24gMQogICAgamF2YXNjcmlwdDpQbGF5ZXIuTW9uZXkgPSA5OTk5OTk5CiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKICAgIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOwogICAgZm9yY2VjbG9zZW1lbnUoKTsKICB9IGVsc2UgaWYgKHNlbGVjdGVkT3B0aW9uID09PSAib3B0MiIpIHsKICAgIC8vIFBlcmZvcm0gYWN0aW9uIGZvciBPcHRpb24gMgogICAgamF2YXNjcmlwdDpQbGF5ZXIuTW9uZXkgPSBwcm9tcHQoIkVudGVyIENhc2ggQW1vdW50Iik7CiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOwogIH0gZWxzZSBpZiAoc2VsZWN0ZWRPcHRpb24gPT09ICJvcHQzIikgewogICAgLy8gUGVyZm9ybSBhY3Rpb24gZm9yIE9wdGlvbiAzCiAgICBqYXZhc2NyaXB0OlNraWxsQ2hhbmdlKCJJbmZpbHRyYXRpb24iLCAxMCk7CiAgICBTa2lsbENoYW5nZSgiU2VsZkJvbmRhZ2UiLCAxMCk7Ly9zZWxmLXRpZQogICAgU2tpbGxDaGFuZ2UoIldpbGxwb3dlciIsIDEwKTsvL1Jlc2lzdCBvcmdhc21zCiAgICBTa2lsbENoYW5nZSgiRXZhc2lvbiIsIDEwKTsvL0JhdHRsZSBza2lsbHMKICAgIFNraWxsQ2hhbmdlKCJCb25kYWdlIiwgMTApOy8vVGllIG90aGVycwogICAgU2tpbGxDaGFuZ2UoIkRyZXNzYWdlIiwgMTApOy8vQUJETAogICAgU2tpbGxDaGFuZ2UoIkxvY2tQaWNraW5nIiwgMTApOwogICAgc2hvd1RvYXN0c2NwZygpOwogICAgZm9yY2VjbG9zZW1lbnUoKTsKICB9IGVsc2UgaWYgKHNlbGVjdGVkT3B0aW9uID09PSAib3B0NCIpIHsKICAgIC8vIFBlcmZvcm0gYWN0aW9uIGZvciBPcHRpb24gNAogICAgamF2YXNjcmlwdDpSZXB1dGF0aW9uQ2hhbmdlKCJHYW1pbmciLCAxMDApOy8vQXJjYWRlIGFuZCBLaW5reUR1bmdlb24KICAgIFJlcHV0YXRpb25DaGFuZ2UoIkdhbWJsaW5nIiwgMTAwKTsvL0dhbWJsaW5nIHJvb20KICAgIFJlcHV0YXRpb25DaGFuZ2UoIkxBUlAiLCAxMDApOwogICAgUmVwdXRhdGlvbkNoYW5nZSgiTWFpZCIsIDEwMCk7Ly9DYW4gYmUgYSBNYWlkCiAgICBSZXB1dGF0aW9uQ2hhbmdlKCJBQkRMIiwgMTAwKTsKICAgIFJlcHV0YXRpb25DaGFuZ2UoIk51cnNlIiwgMTAwKTsvL0NhbiBiZSBhIE51cnNlCiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOwogIH0gZWxzZSBpZiAoc2VsZWN0ZWRPcHRpb24gPT09ICJvcHQ1IikgewogICAgLy8gUGVyZm9ybSBhY3Rpb24gZm9yIE9wdGlvbiA1CiAgICBqYXZhc2NyaXB0OlNlcnZlclBsYXllclN5bmMKICAgIEFzc2V0RmVtYWxlM0RDRy5mb3JFYWNoKGdyb3VwPT5ncm91cC5Bc3NldC5mb3JFYWNoKGl0ZW09PkludmVudG9yeUFkZChQbGF5ZXIsIGl0ZW0uTmFtZSwgZ3JvdXAuR3JvdXApKSk7CiAgICBTZXJ2ZXJQbGF5ZXJJbnZlbnRvcnlTeW5jKCk7CiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOwogIH0gZWxzZSBpZiAoc2VsZWN0ZWRPcHRpb24gPT09ICJvcHQ2IikgewogICAgLy8gUGVyZm9ybSBhY3Rpb24gZm9yIE9wdGlvbiA2CiAgICBqYXZhc2NyaXB0OkludmVudG9yeVJlbW92ZShQbGF5ZXIsICJJdGVtTmVjayIpOwogICAgQ2hhdFJvb21DaGFyYWN0ZXJJdGVtVXBkYXRlKFBsYXllciwgIkl0ZW1OZWNrIik7CiAgICBMb2dBZGQoIlJlbGVhc2VkQ29sbGFyIiwgIk93bmVyUnVsZSIpOyAKICAgIHNob3dUb2FzdHNjcGcoKTsKICAgIGZvcmNlY2xvc2VtZW51KCk7CiAgfSBlbHNlIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gIm9wdDciKSB7CiAgICAvLyBQZXJmb3JtIGFjdGlvbiBmb3IgT3B0aW9uIDcKICAgIGphdmFzY3JpcHQ6YWxlcnQoJ1N0YXJ0IGEgTEFSUCBzZXNzaW9uICYgc2VsZWN0IGNsYXNzIGJlZm9yZSBydW5uaW5nJyk7CiAgICBHYW1lTEFSUExldmVsUHJvZ3Jlc3MoMTAwKSAKICAgIHNob3dUb2FzdHNjcGcoKTsKICAgIGZvcmNlY2xvc2VtZW51KCk7CiAgfSBlbHNlIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gIm9wdDgiKSB7CiAgICAvLyBQZXJmb3JtIGFjdGlvbiBmb3IgT3B0aW9uIDgKICAgIGphdmFzY3JpcHQ6TG9nQWRkKCJFc2NhcGVkIiwgIkFzeWx1bSIsIEN1cnJlbnRUaW1lICsgOTk5OTk5OTk5KTsKICAgIHNob3dUb2FzdHNjcGcoKTsKICAgIGZvcmNlY2xvc2VtZW51KCk7CiAgfSBlbHNlIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gIm9wdDkiKSB7CiAgICAvLyBQZXJmb3JtIGFjdGlvbiBmb3IgT3B0aW9uIDkKICAgIGphdmFzY3JpcHQ6TG9nQWRkKCJDbHViU2xhdmUiLCAiTWFuYWdlbWVudCIsIEN1cnJlbnRUaW1lICsgOTk5OTk5OTk5KTsKICAgIHNob3dUb2FzdHNjcGcoKTsKICAgIGZvcmNlY2xvc2VtZW51KCk7CiAgfSBlbHNlIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gIm9wdDEwIikgewogICAgLy8gUGVyZm9ybSBhY3Rpb24gZm9yIE9wdGlvbiAxMAogICAgamF2YXNjcmlwdDpMb2dBZGQoIkVzY2FwZWQiLCAiQXN5bHVtIiwgQ3VycmVudFRpbWUpOwogICAgTG9nQWRkKCJDbHViU2xhdmUiLCAiTWFuYWdlbWVudCIsIEN1cnJlbnRUaW1lKTsKICAgIExvZ0FkZCgiQmxvY2tDaGFuZ2UiLCAiUnVsZSIsIEN1cnJlbnRUaW1lKTsKICAgIE1hbmFnZW1lbnRJc0NsdWJTbGF2ZSA9IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIGZhbHNlCiAgICB9CiAgICBNYW5hZ2VtZW50Q2x1YlNsYXZlRGlhbG9nID0gZnVuY3Rpb24oUGxheWVyKSB7fQogICAgTWFuYWdlbWVudEZpbmlzaENsdWJTbGF2ZSgpCiAgfSBlbHNlIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gIm9wdDExIikgewogICAgLy8gUGVyZm9ybSBhY3Rpb24gZm9yIE9wdGlvbiAxMQogICAgamF2YXNjcmlwdDphbGVydCgnU3RhcnQgYSBHR1RTIHNlc3Npb24gYmVmb3JlIHJ1bm5pbmcsIHJlZnJlc2ggdG8gc2VlIGNoYW5nZXMnKTsKICAgIFBsYXllci5HYW1lLkdHVFMuTGV2ZWwgPSBwcm9tcHQoIkVudGVyIEdHVFMgTGV2ZWwgKDEtNikiKTs7CiAgICBTZXJ2ZXJBY2NvdW50VXBkYXRlLlF1ZXVlRGF0YSh7CiAgICBHYW1lOiBQbGF5ZXIuR2FtZQogICAgfSk7CiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOwogIH0KICAvLyBIaWRlIHRoZSBkcm9wZG93biBtZW51CiAgc2VsZWN0LnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7Cn0pOwoKLy9FbmQgb2YgREQgbWVudQoKLy8gQWRkIGhlYWRlciwgYnV0dG9ucywgYW5kIHNlcGFyYXRvciB0byBjb250ZXh0IG1lbnUKCmZ1bmN0aW9uIHVwZGF0ZUNvbnRleHRNZW51KCkgewogIHdoaWxlIChjb250ZXh0TWVudS5maXJzdENoaWxkKSB7CiAgICBjb250ZXh0TWVudS5yZW1vdmVDaGlsZChjb250ZXh0TWVudS5maXJzdENoaWxkKTsKICB9CiAgY29udGV4dE1lbnUuYXBwZW5kQ2hpbGQoaGVhZGVyKTsKICBjb250ZXh0TWVudS5hcHBlbmRDaGlsZChjcmVhdGVTZXBhcmF0b3IoKSk7CiAgY29udGV4dE1lbnUuYXBwZW5kQ2hpbGQoYnV0dG9uMSk7CiAgY29udGV4dE1lbnUuYXBwZW5kQ2hpbGQoYnV0dG9uMik7CiAgY29udGV4dE1lbnUuYXBwZW5kQ2hpbGQoYnV0dG9uMyk7CiAgY29udGV4dE1lbnUuYXBwZW5kQ2hpbGQoYnV0dG9uNCk7CiAgY29udGV4dE1lbnUuYXBwZW5kQ2hpbGQoYnV0dG9uNSk7CiAgY29udGV4dE1lbnUuYXBwZW5kQ2hpbGQoYnV0dG9uNik7CiAgY29udGV4dE1lbnUuYXBwZW5kQ2hpbGQoYnV0dG9uNyk7CiAgaWYgKHZpc2IpIHsKICAgIGNvbnRleHRNZW51LmFwcGVuZENoaWxkKGJ1dHRvbjgpOwogIH0gZWxzZSB7CiAgICBjb250ZXh0TWVudS5hcHBlbmRDaGlsZChidXR0b245KTsKICB9CiAgY29udGV4dE1lbnUuYXBwZW5kQ2hpbGQoYnV0dG9uMTApOwogIC8vIEFkZCB0aGUgZHJvcGRvd24gbWVudSB0byB0aGUgY29udGV4dCBtZW51CiAgY29udGV4dE1lbnUuYXBwZW5kQ2hpbGQoY3JlYXRlU2VwYXJhdG9yKCkpOwogIGNvbnRleHRNZW51LmFwcGVuZENoaWxkKGRyb3Bkb3duQnV0dG9uKTsKICBjb250ZXh0TWVudS5hcHBlbmRDaGlsZChzZWxlY3QpOwogIAp9Cgp1cGRhdGVDb250ZXh0TWVudSgpOwoKLy8gRXZlbnQgbGlzdGVuZXIgdG8gdXBkYXRlIHRoZSBtZW51IHdoZW4gaXQgaXMgb3BlbmVkCmNvbnRleHRNZW51LmFkZEV2ZW50TGlzdGVuZXIoJ2NvbnRleHRtZW51JywgZnVuY3Rpb24oKSB7CiAgdXBkYXRlQ29udGV4dE1lbnUoKTsKfSk7Cgpkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGNvbnRleHRNZW51KTsKCiAgICAKfSk7CgovLyBGdW5jdGlvbiB0byBoaWRlIGN1c3RvbSBjb250ZXh0IG1lbnUKZG9jdW1lbnQuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCBmdW5jdGlvbigpIHsKICAgIGlmIChjb250ZXh0TWVudU9wZW4pIHsKICAgICAgICB2YXIgY29udGV4dE1lbnUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCJkaXZbc3R5bGUqPSdmaXhlZCddIik7CiAgICAgICAgaWYgKGNvbnRleHRNZW51KSB7CiAgICAgICAgICAgIGNvbnRleHRNZW51LnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICAgICAgICAgIENoYXRSb29tQ2xpY2tDaGFyYWN0ZXIoUGxheWVyKTsKICAgICAgICAgICAgRGlhbG9nTGVhdmUoKTsKICAgICAgICB9CiAgICAgICAgY29udGV4dE1lbnVPcGVuID0gZmFsc2U7CiAgICB9Cn0pOwoKCi8vRU5EIE9GIENPTlRFWFQgTUVOVSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQpmdW5jdGlvbiBzaG93VG9hc3RzY3BnKCkgewogICAgLy8gQ3JlYXRlIHRoZSB0b2FzdCBjb250YWluZXIKICAgIHZhciB0b2FzdENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUucG9zaXRpb24gPSAiZml4ZWQiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuYm90dG9tID0gIjVweCI7CiAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5yaWdodCA9ICI1cHgiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIndoaXRlIjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmNvbG9yID0gIiMxNDE0MTQiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUucGFkZGluZyA9ICI1cHgiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuYm9yZGVyID0gIjJweCBzb2xpZCAjNENBRjUwIjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmJvcmRlclJhZGl1cyA9ICI1cHgiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuYm94U2hhZG93ID0gIjJweCAycHggMTBweCByZ2JhKDAsIDAsIDAsIDAuNSkiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLnpJbmRleCA9ICI5OTkiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUudHJhbnNpdGlvbiA9ICJvcGFjaXR5IDAuNXMgZWFzZS1pbi1vdXQiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICIwIjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAiZmxleCI7CiAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5hbGlnbkl0ZW1zID0gImNlbnRlciI7CiAgICB2YXIgc3RhdHVzQmFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CnN0YXR1c0Jhci5zdHlsZS53aWR0aCA9ICIxMDAlIjsKc3RhdHVzQmFyLnN0eWxlLmhlaWdodCA9ICIzcHgiOwpzdGF0dXNCYXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gImJsYWNrIjsKc3RhdHVzQmFyLnN0eWxlLnBvc2l0aW9uID0gImFic29sdXRlIjsKc3RhdHVzQmFyLnN0eWxlLmJvdHRvbSA9ICIwIjsKc3RhdHVzQmFyLnN0eWxlLmxlZnQgPSAiMCI7CnN0YXR1c0Jhci5zdHlsZS50cmFuc2l0aW9uID0gIndpZHRoIDVzIGVhc2UtaW4tb3V0IjsKc3RhdHVzQmFyLnN0eWxlLndpZHRoID0gIjAlIjsKdG9hc3RDb250YWluZXIuYXBwZW5kQ2hpbGQoc3RhdHVzQmFyKTsKCi8vIFVwZGF0ZSB0aGUgd2lkdGggb2YgdGhlIHN0YXR1cyBiYXIgYXMgaXQgY291bnRzIGRvd24Kc2V0VGltZW91dChmdW5jdGlvbigpIHsKICBzdGF0dXNCYXIuc3R5bGUud2lkdGggPSAiMTAwJSI7Cn0sIDApOwogICAgCi8vIEFkZCB0aGUgY3VzdG9tIGltYWdlIGljb24KdmFyIGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKTsKaWNvbi5zcmMgPSAiaHR0cHM6Ly9tZWRpYS5kaXNjb3JkYXBwLm5ldC9hdHRhY2htZW50cy83ODE3NDkyMjkzMzE5MzkzMjgvMTA3OTY1OTAxNjkxOTE5NTc0OC9iNjY0MTkxMTc4OTdhOTg4LnBuZz93aWR0aD0xMTkwJmhlaWdodD0xMTg5IjsKaWNvbi5zdHlsZS53aWR0aCA9ICIyM3B4IjsKaWNvbi5zdHlsZS5oZWlnaHQgPSAiMjNweCI7Cmljb24uc3R5bGUuYm9yZGVyUmFkaXVzID0gIjUwJSI7Cmljb24uc3R5bGUubWFyZ2luUmlnaHQgPSAiLTMwcHgiOwppY29uLnN0eWxlLm1hcmdpbkJvdHRvbSA9ICItNXB4IjsKdG9hc3RDb250YWluZXIuYXBwZW5kQ2hpbGQoaWNvbik7CgovLyBBZGQgdGhlIHRleHQgbWVzc2FnZQp2YXIgdGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNwYW4iKTsKdGV4dC5zdHlsZS5mb250V2VpZ2h0ID0gImJvbGQiOwp0ZXh0LnN0eWxlLm1hcmdpbkxlZnQgPSAiMzVweCI7CnRleHQuaW5uZXJIVE1MID0gIkFjdGlvbiBTdWNjZXNzZnVsbHkgRXhlY3V0ZWQiOwp0b2FzdENvbnRhaW5lci5hcHBlbmRDaGlsZCh0ZXh0KTsKCiAgICAKICAKICAgIC8vIEFwcGVuZCB0aGUgdG9hc3QgY29udGFpbmVyIHRvIHRoZSBib2R5CiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRvYXN0Q29udGFpbmVyKTsKICAKICAgIC8vIFNob3cgdGhlIHRvYXN0IHdpdGggYSBmYWRlIGluIGFuaW1hdGlvbgogICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJibG9jayI7CiAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLm9wYWNpdHkgPSAiMSI7CiAgICB9LCAwKTsKICAKICAgIC8vIEhpZGUgdGhlIHRvYXN0IHdpdGggYSBmYWRlIG91dCBhbmltYXRpb24KICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLm9wYWNpdHkgPSAiMCI7CiAgICB9LCA1MDAwKTsKICAKICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICB9LCA1NTAwKTsKICB9CiAgCgovL1RoZSBVcGRhdGUgdG9hc3QKCiAgZnVuY3Rpb24gc2hvd1RvYXN0VXBkYXRlKCkgewogICAgLy8gQ3JlYXRlIHRoZSB0b2FzdCBjb250YWluZXIKICAgIHZhciB0b2FzdENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUucG9zaXRpb24gPSAiZml4ZWQiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuYm90dG9tID0gIjVweCI7CiAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5yaWdodCA9ICI1cHgiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIndoaXRlIjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmNvbG9yID0gIiMxNDE0MTQiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUucGFkZGluZyA9ICI1cHgiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuYm9yZGVyID0gIjJweCBzb2xpZCAjZjIyYzJjIjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmJvcmRlclJhZGl1cyA9ICI1cHgiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuYm94U2hhZG93ID0gIjJweCAycHggMTBweCByZ2JhKDAsIDAsIDAsIDAuNSkiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLnpJbmRleCA9ICI5OTkiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUudHJhbnNpdGlvbiA9ICJvcGFjaXR5IDAuNXMgZWFzZS1pbi1vdXQiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICIwIjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAiZmxleCI7CiAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5hbGlnbkl0ZW1zID0gImNlbnRlciI7CiAgICB2YXIgc3RhdHVzQmFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CnN0YXR1c0Jhci5zdHlsZS53aWR0aCA9ICIxMDAlIjsKc3RhdHVzQmFyLnN0eWxlLmhlaWdodCA9ICIzcHgiOwpzdGF0dXNCYXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gImJsYWNrIjsKc3RhdHVzQmFyLnN0eWxlLnBvc2l0aW9uID0gImFic29sdXRlIjsKc3RhdHVzQmFyLnN0eWxlLmJvdHRvbSA9ICIwIjsKc3RhdHVzQmFyLnN0eWxlLmxlZnQgPSAiMCI7CnN0YXR1c0Jhci5zdHlsZS50cmFuc2l0aW9uID0gIndpZHRoIDVzIGVhc2UtaW4tb3V0IjsKc3RhdHVzQmFyLnN0eWxlLndpZHRoID0gIjAlIjsKdG9hc3RDb250YWluZXIuYXBwZW5kQ2hpbGQoc3RhdHVzQmFyKTsKCi8vIFVwZGF0ZSB0aGUgd2lkdGggb2YgdGhlIHN0YXR1cyBiYXIgYXMgaXQgY291bnRzIGRvd24Kc2V0VGltZW91dChmdW5jdGlvbigpIHsKICBzdGF0dXNCYXIuc3R5bGUud2lkdGggPSAiMTAwJSI7Cn0sIDApOwogICAgCi8vIEFkZCB0aGUgY3VzdG9tIGltYWdlIGljb24KdmFyIGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKTsKaWNvbi5zcmMgPSAiaHR0cHM6Ly9tZWRpYS5kaXNjb3JkYXBwLm5ldC9hdHRhY2htZW50cy83ODE3NDkyMjkzMzE5MzkzMjgvMTA3OTY1OTAxNjkxOTE5NTc0OC9iNjY0MTkxMTc4OTdhOTg4LnBuZz93aWR0aD0xMTkwJmhlaWdodD0xMTg5IjsKaWNvbi5zdHlsZS53aWR0aCA9ICIyM3B4IjsKaWNvbi5zdHlsZS5oZWlnaHQgPSAiMjNweCI7Cmljb24uc3R5bGUuYm9yZGVyUmFkaXVzID0gIjUwJSI7Cmljb24uc3R5bGUubWFyZ2luUmlnaHQgPSAiLTMwcHgiOwppY29uLnN0eWxlLm1hcmdpbkJvdHRvbSA9ICItNXB4IjsKdG9hc3RDb250YWluZXIuYXBwZW5kQ2hpbGQoaWNvbik7CgovLyBBZGQgdGhlIHRleHQgbWVzc2FnZQp2YXIgdGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNwYW4iKTsKdGV4dC5zdHlsZS5mb250V2VpZ2h0ID0gImJvbGQiOwp0ZXh0LnN0eWxlLm1hcmdpbkxlZnQgPSAiMzVweCI7CnRleHQuaW5uZXJIVE1MID0gIk5ldyB1cGRhdGUgZGV0ZWN0ZWQsIHVwZ3JhZGUgYnVpbGQgZm9yIGxhdGVzdCBmZWF0dXJlcyI7CnRvYXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKHRleHQpOwoKICAgIAogIAogICAgLy8gQXBwZW5kIHRoZSB0b2FzdCBjb250YWluZXIgdG8gdGhlIGJvZHkKICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodG9hc3RDb250YWluZXIpOwogIAogICAgLy8gU2hvdyB0aGUgdG9hc3Qgd2l0aCBhIGZhZGUgaW4gYW5pbWF0aW9uCiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsKICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICIxIjsKICAgIH0sIDApOwogIAogICAgLy8gSGlkZSB0aGUgdG9hc3Qgd2l0aCBhIGZhZGUgb3V0IGFuaW1hdGlvbgogICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICIwIjsKICAgIH0sIDUwMDAwMDApOwogIAogICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgIH0sIDU1MDAwMDApOwogIH0KICAKCiAgLy8gQ2FsbCB0aGUgc2hvd1RvYXN0IGZ1bmN0aW9uIGltbWVkaWF0ZWx5CgogIGNvbnN0IGVsZW1lbnRUb1JlbW92ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2RpdltzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyBpbnNldDogNSU7IGJhY2tncm91bmQ6IHdoaXRlOyBkaXNwbGF5OiBmbGV4OyBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyBwYWRkaW5nOiAxZW07Il0nKTsKCiAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7CiAgICBjb25zdCBlbGVtZW50VG9SZW1vdmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdkaXZbc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgaW5zZXQ6IDUlOyBiYWNrZ3JvdW5kOiB3aGl0ZTsgZGlzcGxheTogZmxleDsgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgcGFkZGluZzogMWVtOyJdJyk7CiAgICBpZiAoZWxlbWVudFRvUmVtb3ZlKSB7CiAgICAgIGNvbnN0IGJ1dHRvbnMgPSBlbGVtZW50VG9SZW1vdmUucXVlcnlTZWxlY3RvckFsbCgnYnV0dG9uW3N0eWxlPSJjdXJzb3I6IHBvaW50ZXI7Il0nKTsKICAgICAgaWYgKGJ1dHRvbnMpIHsKICAgICAgICBidXR0b25zLmZvckVhY2goYnV0dG9uID0+IGJ1dHRvbi5jbGljaygpKTsKICAgICAgfQogICAgfQogIH0sIDEpOwogIHNldEludGVydmFsKGZ1bmN0aW9uKCkgewogICAgY29uc3QgZWxlbWVudFRvUmVtb3ZlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignZGl2W3N0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IGluc2V0OiA1JTsgYmFja2dyb3VuZDogd2hpdGU7IGRpc3BsYXk6IGZsZXg7IGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IHBhZGRpbmc6IDFlbTsiXScpOwogICAgaWYgKGVsZW1lbnRUb1JlbW92ZSkgewogICAgICBjb25zdCBidXR0b25zID0gZWxlbWVudFRvUmVtb3ZlLnF1ZXJ5U2VsZWN0b3JBbGwoJ2J1dHRvbltzdHlsZT0iY3Vyc29yOiBwb2ludGVyOyJdJyk7CiAgICAgIGlmIChidXR0b25zKSB7CiAgICAgICAgYnV0dG9ucy5mb3JFYWNoKGJ1dHRvbiA9PiB7CiAgICAgICAgICBpZiAoYnV0dG9uLnRleHRDb250ZW50ID09PSAiRG8gbm90IHNob3cgdGhpcyByZXBvcnQgYWdhaW4gdW5sZXNzIHNvbWV0aGluZyBjaGFuZ2VzIiB8fCBidXR0b24udGV4dENvbnRlbnQgPT09ICJDbG9zZSIpIHsKICAgICAgICAgICAgYnV0dG9uLmNsaWNrKCk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9LCA1MDApOwoKICAvLyBEZWZpbmUgdGhlIFVSTCBvZiB0aGUgcmF3IEdpdEh1YiBwYWdlIHRvIGNoZWNrCmNvbnN0IHVybCA9ICdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vQkNNUzcvQkNNL21haW4vdXBkYXRlbWFuYWdlci5qcyc7Ci8vIERlZmluZSB0aGUgbWF4aW11bSB2ZXJzaW9uIG51bWJlciBhbGxvd2VkCmNvbnN0IG1heFZlcnNpb24gPSA2OwovLyBEZWZpbmUgYSBmbGFnIHRvIGtlZXAgdHJhY2sgb2Ygd2hldGhlciB0aGUgYWxlcnQgaGFzIGJlZW4gdHJpZ2dlcmVkCmxldCBhbGVydFRyaWdnZXJlZCA9IGZhbHNlOwovLyBEZWZpbmUgYSBmdW5jdGlvbiB0byBjaGVjayB0aGUgdmVyc2lvbiBhbmQgc2hvdyB0aGUgYWxlcnQgaWYgbmVjZXNzYXJ5CmZ1bmN0aW9uIGNoZWNrVmVyc2lvbigpIHsKICBmZXRjaCh1cmwpCiAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS50ZXh0KCkpCiAgICAudGhlbih2ZXJzaW9uID0+IHsKICAgICAgaWYgKHBhcnNlSW50KHZlcnNpb24pID4gbWF4VmVyc2lvbiAmJiAhYWxlcnRUcmlnZ2VyZWQpIHsKICAgICAgICBzaG93VG9hc3RVcGRhdGUoKTsKICAgICAgICBhbGVydFRyaWdnZXJlZCA9IHRydWU7CiAgICAgIH0KICAgIH0pCiAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5lcnJvcihlcnJvcikpOwp9Ci8vIENhbGwgdGhlIGNoZWNrVmVyc2lvbiBmdW5jdGlvbiBldmVyeSA1IHNlY29uZHMgdXNpbmcgYSBsb29wCnNldEludGVydmFsKGNoZWNrVmVyc2lvbiwgNTAwMCk7Cn0KfSk=')
if (sprc) {
eval(sprc);
}
